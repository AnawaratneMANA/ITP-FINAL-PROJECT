/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

import SQL.DBHelper;
import Table.TableModel.Facility;
import static Table.TableModel.Package.roompackage_name;
import java.awt.Color;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author Acer
 */
public class RoomPanel extends javax.swing.JPanel {

    /**
     * Creates new form RoomPanel
     */
    public RoomPanel() {
        initComponents();
        setVisible(true);
        //setLocationRelativeTo(null);
        
        fillRoomtable();
        fillPackagetable();
        fillFacilityTable();
        fillInventoryRequestTable();
        
        FillDropDown();
        fillPackageFacilitytable();
        fillCustomerInventoytable();
        
        //Initialize holders 
        TEMP_TEXT.setVisible(false);
        TEMP_TXT2.setVisible(false);
        TEMP_TEXT3.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panel_center = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        addRoomDetailsPannel = new javax.swing.JButton();
        addPackageDetailsPannel = new javax.swing.JButton();
        addFacilityDetailsPannel = new javax.swing.JButton();
        addInventoryRequestDetailsPannel = new javax.swing.JButton();
        addroomDetailsReportPannel = new javax.swing.JButton();
        HomeBtn = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        panel_centerNew = new javax.swing.JPanel();
        addRoom = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        type = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        adults = new javax.swing.JLabel();
        children = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        floor_no = new javax.swing.JTextField();
        category = new javax.swing.JComboBox<>();
        max_adults = new javax.swing.JTextField();
        max_childrens = new javax.swing.JTextField();
        phone_no = new javax.swing.JTextField();
        description = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btn_delete_room = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        searchRoom = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane7 = new javax.swing.JScrollPane();
        RoomTableDetails = new javax.swing.JTable();
        btn_update_room = new javax.swing.JButton();
        status = new javax.swing.JComboBox<>();
        TEMP_TEXT3 = new javax.swing.JTextField();
        package_name = new javax.swing.JComboBox<>();
        floorKey = new javax.swing.JLabel();
        adultsKey = new javax.swing.JLabel();
        adultKey = new javax.swing.JLabel();
        childrenKey = new javax.swing.JLabel();
        addPackage = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        packagename = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        discount = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        btnUpdatePackage = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        PackageCombo = new javax.swing.JComboBox<>();
        FacilityCombo = new javax.swing.JComboBox<>();
        btn_add_packagefacility = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane8 = new javax.swing.JScrollPane();
        PackageIntofacilityTable = new javax.swing.JTable();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        searchpackage = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        packageDetailsTable = new javax.swing.JTable();
        btn_delete_package = new javax.swing.JButton();
        TEMP_TXT2 = new javax.swing.JTextField();
        priceKey = new javax.swing.JLabel();
        discountKey = new javax.swing.JLabel();
        addFacilities = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        facilityname = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        facilitytable = new javax.swing.JTable();
        jLabel25 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        TEMP_TEXT = new javax.swing.JTextField();
        kitchenRequest = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        inventoryRequest = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        inventoryItem = new javax.swing.JComboBox<>();
        qty = new javax.swing.JTextField();
        amount = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        searchInRequest = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        InventoryRequestTableDetails = new javax.swing.JTable();
        jLabel41 = new javax.swing.JLabel();
        txtcid = new javax.swing.JTextField();
        jScrollPane10 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        searchcustname = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        qtyKey = new javax.swing.JLabel();
        amountKey = new javax.swing.JLabel();
        reports = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(1360, 590));
        setMinimumSize(new java.awt.Dimension(1360, 590));
        setPreferredSize(new java.awt.Dimension(1360, 590));

        panel_center.setPreferredSize(new java.awt.Dimension(1269, 674));

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setPreferredSize(new java.awt.Dimension(1, 1));

        addRoomDetailsPannel.setForeground(new java.awt.Color(255, 255, 255));
        addRoomDetailsPannel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Black/room49.png"))); // NOI18N
        addRoomDetailsPannel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        addRoomDetailsPannel.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Orange/room44.png"))); // NOI18N
        addRoomDetailsPannel.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Orange/room44.png"))); // NOI18N
        addRoomDetailsPannel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addRoomDetailsPannelMouseClicked(evt);
            }
        });

        addPackageDetailsPannel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Black/room50.png"))); // NOI18N
        addPackageDetailsPannel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        addPackageDetailsPannel.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Orange/room45.png"))); // NOI18N
        addPackageDetailsPannel.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Orange/room45.png"))); // NOI18N
        addPackageDetailsPannel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addPackageDetailsPannelMouseClicked(evt);
            }
        });

        addFacilityDetailsPannel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Black/room51.png"))); // NOI18N
        addFacilityDetailsPannel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        addFacilityDetailsPannel.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Orange/room46.png"))); // NOI18N
        addFacilityDetailsPannel.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Orange/room46.png"))); // NOI18N
        addFacilityDetailsPannel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addFacilityDetailsPannelMouseClicked(evt);
            }
        });

        addInventoryRequestDetailsPannel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Black/room52.png"))); // NOI18N
        addInventoryRequestDetailsPannel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        addInventoryRequestDetailsPannel.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Orange/room47.png"))); // NOI18N
        addInventoryRequestDetailsPannel.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Orange/room47.png"))); // NOI18N
        addInventoryRequestDetailsPannel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addInventoryRequestDetailsPannelMouseClicked(evt);
            }
        });

        addroomDetailsReportPannel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Black/room53.png"))); // NOI18N
        addroomDetailsReportPannel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        addroomDetailsReportPannel.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Orange/room48.png"))); // NOI18N
        addroomDetailsReportPannel.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RoomButton/Orange/room48.png"))); // NOI18N
        addroomDetailsReportPannel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addroomDetailsReportPannelMouseClicked(evt);
            }
        });

        HomeBtn.setBackground(new java.awt.Color(204, 204, 204));
        HomeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeBtnmouseclicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HomeBtnmouseentered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HomeBtnmouseexited(evt);
            }
        });

        jLabel43.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        jLabel43.setText("Home");

        javax.swing.GroupLayout HomeBtnLayout = new javax.swing.GroupLayout(HomeBtn);
        HomeBtn.setLayout(HomeBtnLayout);
        HomeBtnLayout.setHorizontalGroup(
            HomeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeBtnLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        HomeBtnLayout.setVerticalGroup(
            HomeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeBtnLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel43)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addroomDetailsReportPannel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addInventoryRequestDetailsPannel, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(addPackageDetailsPannel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addRoomDetailsPannel, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(addFacilityDetailsPannel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(HomeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(addRoomDetailsPannel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addPackageDetailsPannel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addFacilityDetailsPannel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addInventoryRequestDetailsPannel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addroomDetailsReportPannel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(HomeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel_centerNew.setLayout(new java.awt.CardLayout());

        addRoom.setPreferredSize(new java.awt.Dimension(865, 772));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Add Room");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Select Room Type");

        type.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ac", "Non Ac" }));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Floor No");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Room Category");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("Status");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Package Name");

        adults.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        adults.setText("Max Adults");

        children.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        children.setText("Max children");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setText("Phone Number");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel21.setText("Description");

        floor_no.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        floor_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                floor_noKeyPressed(evt);
            }
        });

        category.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Category", "Single", "Double", "Family" }));

        max_adults.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        max_adults.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                max_adultsKeyPressed(evt);
            }
        });

        max_childrens.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        max_childrens.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                max_childrensKeyPressed(evt);
            }
        });

        phone_no.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        phone_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                phone_noKeyReleased(evt);
            }
        });

        description.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        description.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descriptionKeyTyped(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 51, 255));
        jButton1.setText("Add");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1AddRoom(evt);
            }
        });

        btn_delete_room.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_delete_room.setForeground(new java.awt.Color(255, 0, 51));
        btn_delete_room.setText("Delete");
        btn_delete_room.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_delete_roomDeleteRoomDetails(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel22.setText("All Room Details");

        jLabel23.setText("Search");

        searchRoom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchRoomKeyReleased(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(153, 0, 153));
        jSeparator2.setForeground(new java.awt.Color(153, 0, 153));
        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 153), 3));

        RoomTableDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Room Id", "Rooom Type", "Floor No", "Category", "Status", "Package Name", "Max Adults", "Max Childrens", "Phone Number", "Description"
            }
        ));
        RoomTableDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RoomTableDetailsMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(RoomTableDetails);

        btn_update_room.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_update_room.setForeground(new java.awt.Color(51, 255, 0));
        btn_update_room.setText("Update");
        btn_update_room.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_update_roomUpdateRoomDetails(evt);
            }
        });

        status.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Cleaning", "Full" }));

        package_name.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        package_name.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gold", "Silver", "Platinum" }));

        floorKey.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        floorKey.setForeground(new java.awt.Color(255, 0, 0));

        adultKey.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        adultKey.setForeground(new java.awt.Color(255, 0, 0));

        childrenKey.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        childrenKey.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout addRoomLayout = new javax.swing.GroupLayout(addRoom);
        addRoom.setLayout(addRoomLayout);
        addRoomLayout.setHorizontalGroup(
            addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addRoomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addRoomLayout.createSequentialGroup()
                        .addGroup(addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(floor_no, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(floorKey, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(80, 80, 80)
                        .addGroup(addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(package_name, 0, 194, Short.MAX_VALUE)
                            .addComponent(adults)
                            .addComponent(max_adults, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                            .addComponent(children)
                            .addComponent(max_childrens, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(childrenKey, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(adultKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(54, 54, 54)
                        .addComponent(TEMP_TEXT3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addGroup(addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phone_no, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(description, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addRoomLayout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_update_room, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_delete_room)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(adultsKey, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addRoomLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(addRoomLayout.createSequentialGroup()
                        .addGroup(addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addRoomLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(188, 188, 188)
                                .addComponent(jLabel17))
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(addRoomLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addRoomLayout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 980, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(48, Short.MAX_VALUE))
                    .addGroup(addRoomLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addGap(36, 36, 36)
                        .addComponent(searchRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74))))
            .addGroup(addRoomLayout.createSequentialGroup()
                .addComponent(jSeparator2)
                .addContainerGap())
        );
        addRoomLayout.setVerticalGroup(
            addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addRoomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addRoomLayout.createSequentialGroup()
                        .addGroup(addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addRoomLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(floor_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(floorKey, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel15))
                            .addGroup(addRoomLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(package_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(adults)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(max_adults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(adultKey, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(children)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(addRoomLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phone_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(description, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addRoomLayout.createSequentialGroup()
                        .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addRoomLayout.createSequentialGroup()
                            .addComponent(max_childrens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(childrenKey, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1)
                                    .addComponent(btn_update_room)
                                    .addComponent(btn_delete_room))))
                        .addComponent(adultsKey, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addRoomLayout.createSequentialGroup()
                            .addComponent(TEMP_TEXT3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28))))
                .addGap(28, 28, 28)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(addRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23)
                    .addComponent(searchRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(386, 386, 386))
        );

        panel_centerNew.add(addRoom, "card2");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Add Package");

        jLabel32.setText("Package Name");

        packagename.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                packagenameKeyTyped(evt);
            }
        });

        jLabel33.setText("Price");

        price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceKeyPressed(evt);
            }
        });

        jLabel34.setText("Discount");

        discount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                discountKeyPressed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 204));
        jButton6.setText("Add");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6AddPackage(evt);
            }
        });

        btnUpdatePackage.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnUpdatePackage.setForeground(new java.awt.Color(51, 255, 0));
        btnUpdatePackage.setText("Update");
        btnUpdatePackage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdatePackageUpdatePackageTable(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel36.setText("Add Facilities To The Package");

        jLabel37.setText("Select Package");

        jLabel38.setText("Select a Facility");

        PackageCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        FacilityCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btn_add_packagefacility.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_add_packagefacility.setForeground(new java.awt.Color(0, 0, 204));
        btn_add_packagefacility.setText("Add");
        btn_add_packagefacility.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_add_packagefacilityAddPackageFacility(evt);
            }
        });

        jSeparator3.setBackground(new java.awt.Color(153, 0, 153));
        jSeparator3.setForeground(new java.awt.Color(153, 0, 153));
        jSeparator3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 0, 153), 3, true));

        PackageIntofacilityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "package", "facilities"
            }
        ));
        jScrollPane8.setViewportView(PackageIntofacilityTable);

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel39.setText("All Package Details");

        jLabel40.setText("Search");

        searchpackage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchpackageKeyReleased(evt);
            }
        });

        packageDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Package Id", "Package Name", "Price", "Discount"
            }
        ));
        packageDetailsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                packageDetailsTableMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(packageDetailsTable);

        btn_delete_package.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_delete_package.setForeground(new java.awt.Color(255, 0, 0));
        btn_delete_package.setText("Delete");
        btn_delete_package.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_delete_packageDeletePackageDetails(evt);
            }
        });

        priceKey.setForeground(new java.awt.Color(255, 0, 0));

        discountKey.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout addPackageLayout = new javax.swing.GroupLayout(addPackage);
        addPackage.setLayout(addPackageLayout);
        addPackageLayout.setHorizontalGroup(
            addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPackageLayout.createSequentialGroup()
                .addGroup(addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPackageLayout.createSequentialGroup()
                        .addGroup(addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(addPackageLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(discountKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(addPackageLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel32)
                                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel34)
                                    .addGroup(addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(discount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                                        .addComponent(price, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(packagename, javax.swing.GroupLayout.Alignment.LEADING))))
                            .addGroup(addPackageLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdatePackage)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 244, Short.MAX_VALUE)
                        .addComponent(TEMP_TXT2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56))
                    .addGroup(addPackageLayout.createSequentialGroup()
                        .addGroup(addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPackageLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(priceKey, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addPackageLayout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(btn_delete_package)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(addPackageLayout.createSequentialGroup()
                        .addGroup(addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37)
                            .addComponent(PackageCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel38)
                            .addGroup(addPackageLayout.createSequentialGroup()
                                .addComponent(FacilityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_add_packagefacility, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane8))
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPackageLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel36)
                .addGap(134, 134, 134))
            .addComponent(jSeparator3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPackageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addPackageLayout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel40)
                        .addGap(18, 18, 18)
                        .addComponent(searchpackage, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        addPackageLayout.setVerticalGroup(
            addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPackageLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPackageLayout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel37)
                            .addComponent(jLabel38))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FacilityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PackageCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_add_packagefacility))
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addPackageLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(packagename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(priceKey, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(discountKey, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TEMP_TXT2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6)
                            .addComponent(btnUpdatePackage))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_delete_package)))
                .addGap(29, 29, 29)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jLabel40)
                    .addComponent(searchpackage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                .addContainerGap())
        );

        panel_centerNew.add(addPackage, "card3");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Add Facilities");

        jLabel24.setText("Name of the facility");

        facilityname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                facilitynameKeyTyped(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 255));
        jButton3.setText("ADD");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3AddFacility(evt);
            }
        });

        facilitytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "FacilityID", "Facility Name"
            }
        ));
        facilitytable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                facilitytableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(facilitytable);

        jLabel25.setText("Facilities");

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(51, 255, 0));
        btnUpdate.setText("Update");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateUpdateFacilityTable(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 0, 0));
        btnDelete.setText("Delete");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteDeleteFacilityDetails(evt);
            }
        });

        javax.swing.GroupLayout addFacilitiesLayout = new javax.swing.GroupLayout(addFacilities);
        addFacilities.setLayout(addFacilitiesLayout);
        addFacilitiesLayout.setHorizontalGroup(
            addFacilitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFacilitiesLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(275, 275, 275))
            .addGroup(addFacilitiesLayout.createSequentialGroup()
                .addGroup(addFacilitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addFacilitiesLayout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addGroup(addFacilitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(facilityname, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addFacilitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 234, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addFacilitiesLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TEMP_TEXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136)))
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        addFacilitiesLayout.setVerticalGroup(
            addFacilitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFacilitiesLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(addFacilitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel25))
                .addGroup(addFacilitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addFacilitiesLayout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(facilityname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete)
                        .addGap(36, 36, 36)
                        .addComponent(TEMP_TEXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addFacilitiesLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel_centerNew.add(addFacilities, "card4");

        jLabel10.setText("Kithchen Request");

        javax.swing.GroupLayout kitchenRequestLayout = new javax.swing.GroupLayout(kitchenRequest);
        kitchenRequest.setLayout(kitchenRequestLayout);
        kitchenRequestLayout.setHorizontalGroup(
            kitchenRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kitchenRequestLayout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(jLabel10)
                .addContainerGap(761, Short.MAX_VALUE))
        );
        kitchenRequestLayout.setVerticalGroup(
            kitchenRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kitchenRequestLayout.createSequentialGroup()
                .addGap(225, 225, 225)
                .addComponent(jLabel10)
                .addContainerGap(717, Short.MAX_VALUE))
        );

        panel_centerNew.add(kitchenRequest, "card5");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("Inventory Request Form");

        jLabel26.setText("Select Item");

        jLabel27.setText("Quantity");

        jLabel28.setText("Amount");

        jLabel29.setText("Date");

        inventoryItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Item", "News Paper", "Pendol", "Water Bottle", "Shmpoo", "Soap" }));

        qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                qtyKeyPressed(evt);
            }
        });

        amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                amountKeyPressed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(204, 0, 204));
        jSeparator1.setForeground(new java.awt.Color(153, 0, 153));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 153), 3));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 51, 255));
        jButton4.setText("Add");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4AddInventoryRequest(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(153, 153, 0));
        jButton5.setText("Reset");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5ResetInventoryRequest(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel30.setText("All Inventory Request");

        jLabel31.setText("Search");

        searchInRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchInRequestActionPerformed(evt);
            }
        });
        searchInRequest.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchInRequestKeyReleased(evt);
            }
        });

        InventoryRequestTableDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item Id", "Item Name", "Quantity", "Amount", "Date"
            }
        ));
        jScrollPane6.setViewportView(InventoryRequestTableDetails);

        jLabel41.setText("Customer Id");

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Customer name", "CID", "BID"
            }
        ));
        requestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requestTableMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(requestTable);

        searchcustname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchcustnameKeyReleased(evt);
            }
        });

        jLabel42.setText("Search");

        qtyKey.setForeground(new java.awt.Color(255, 0, 0));

        amountKey.setForeground(new java.awt.Color(255, 0, 0));
        amountKey.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                amountKeyKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout inventoryRequestLayout = new javax.swing.GroupLayout(inventoryRequest);
        inventoryRequest.setLayout(inventoryRequestLayout);
        inventoryRequestLayout.setHorizontalGroup(
            inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(inventoryRequestLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inventoryRequestLayout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel31)
                        .addGap(32, 32, 32)
                        .addComponent(searchInRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(inventoryRequestLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 203, Short.MAX_VALUE))
                    .addGroup(inventoryRequestLayout.createSequentialGroup()
                        .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inventoryRequestLayout.createSequentialGroup()
                                .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel28)
                                    .addComponent(jLabel41)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inventoryRequestLayout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(inventoryRequestLayout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(inventoryRequestLayout.createSequentialGroup()
                                                .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(47, 47, 47))
                                            .addGroup(inventoryRequestLayout.createSequentialGroup()
                                                .addComponent(amountKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(110, 110, 110))
                                            .addGroup(inventoryRequestLayout.createSequentialGroup()
                                                .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(inventoryItem, 0, 224, Short.MAX_VALUE)
                                                    .addComponent(qty, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                                                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtcid, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(qtyKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(inventoryRequestLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(inventoryRequestLayout.createSequentialGroup()
                                .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(inventoryRequestLayout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inventoryRequestLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addComponent(searchcustname, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(60, 60, 60))))
        );
        inventoryRequestLayout.setVerticalGroup(
            inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventoryRequestLayout.createSequentialGroup()
                .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inventoryRequestLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel11)
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inventoryRequestLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchcustname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42))
                        .addGap(18, 18, 18)))
                .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(inventoryRequestLayout.createSequentialGroup()
                        .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(inventoryItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(qtyKey, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inventoryRequestLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(inventoryRequestLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel28)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amountKey, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inventoryRequestLayout.createSequentialGroup()
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtcid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel41)))
                            .addComponent(jLabel29))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inventoryRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel31)
                        .addComponent(searchInRequest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addContainerGap())
        );

        panel_centerNew.add(inventoryRequest, "card6");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel12.setText("All Reports");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton2.setText("All Room Details");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton7.setText("All Package Details");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton8.setText("All Inventory Request");

        javax.swing.GroupLayout reportsLayout = new javax.swing.GroupLayout(reports);
        reports.setLayout(reportsLayout);
        reportsLayout.setHorizontalGroup(
            reportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportsLayout.createSequentialGroup()
                .addGroup(reportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(reportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(reportsLayout.createSequentialGroup()
                            .addGap(315, 315, 315)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(reportsLayout.createSequentialGroup()
                            .addGap(258, 258, 258)
                            .addGroup(reportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(486, Short.MAX_VALUE))
        );
        reportsLayout.setVerticalGroup(
            reportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportsLayout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(163, 163, 163)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(380, Short.MAX_VALUE))
        );

        panel_centerNew.add(reports, "card7");

        javax.swing.GroupLayout panel_centerLayout = new javax.swing.GroupLayout(panel_center);
        panel_center.setLayout(panel_centerLayout);
        panel_centerLayout.setHorizontalGroup(
            panel_centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_centerLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_centerNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_centerLayout.setVerticalGroup(
            panel_centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_centerNew, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_center, javax.swing.GroupLayout.DEFAULT_SIZE, 1360, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_center, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void floor_noKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_floor_noKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            //can't able to enter in text field if enter char is not number
            floor_no.setEditable(false);
            //set error msg
            floorKey.setText("Please enter numbers only");

            // price.setText("");

        }else{
            floor_no.setEditable(true);
            //priceKey.setEnabled(false);
            floorKey.setText("");
        }
    }//GEN-LAST:event_floor_noKeyPressed

    private void max_adultsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_max_adultsKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            //can't able to enter in text field if enter char is not number
            max_adults.setEditable(false);
            //set error msg
            adultKey.setText("Please enter numbers only");

            // price.setText("");

        }else{
            max_adults.setEditable(true);
            //priceKey.setEnabled(false);
            adultKey.setText("");
        }
    }//GEN-LAST:event_max_adultsKeyPressed

    private void max_childrensKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_max_childrensKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            //can't able to enter in text field if enter char is not number
            max_childrens.setEditable(false);
            //set error msg
            childrenKey.setText("Please enter numbers only");

            // price.setText("");

        }else{
            max_childrens.setEditable(true);
            //priceKey.setEnabled(false);
            childrenKey.setText("");
        }

    }//GEN-LAST:event_max_childrensKeyPressed

    private void phone_noKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phone_noKeyReleased

    }//GEN-LAST:event_phone_noKeyReleased

    private void descriptionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionKeyTyped
        char c = evt.getKeyChar();

        if(Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)){
            description.setEditable(true);
        }else{
            description.setEditable(false);
        }
    }//GEN-LAST:event_descriptionKeyTyped

    private void jButton1AddRoom(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1AddRoom

        String room_type;
        room_type = type.getSelectedItem().toString();
        String floorNo = floor_no.getText();
        String room_category;
        room_category = category.getSelectedItem().toString();
        String room_status;
        room_status = status.getSelectedItem().toString();
        String room_package = package_name.getSelectedItem().toString();
        String phone_number = phone_no.getText();
        //int adults = Integer.parseInt(max_adults.getText());
        String adults = max_adults.getText();
        String childrens = max_childrens.getText();
        //int childrens = Integer.parseInt(max_childrens.getText());
        String des = description.getText();

        //validation
        if(type.getSelectedItem().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the Room type","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(floor_no.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the Floor number","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(category.getSelectedItem().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the category","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(status.getSelectedItem().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the status","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(package_name.getSelectedItem().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the package","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(max_adults.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the number of adults","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(max_childrens.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the Number of childrens","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(phone_no.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the Phone number","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(phone_no.getText().length() != 10){
            JOptionPane.showMessageDialog(this, "Please enter correct phone number","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(description.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the Room discription","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        int room_floor_no;
        int numberof_adults;
        int numberof_childrens;

        try{
            room_floor_no = Integer.parseInt(floorNo);
            numberof_adults = Integer.parseInt(adults);
            numberof_childrens = Integer.parseInt(childrens);

        } catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Please Enter correct value","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Validate mobile number
        Pattern p = Pattern.compile("^[0-2][0-9]{9}$");
        Matcher m = p.matcher(phone_no.getText());

        if(m.matches()){

        }else{
            JOptionPane.showMessageDialog(this, "Please Enter correct mobile number","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Validation to see if the item is already exist in the table.
        DBHelper dbhelper = new DBHelper();
        ResultSet rs = dbhelper.SelectFacility();

        try{
            String name;
            while(rs.next()){
                name = rs.getString("phone_no");
                //System.out.println(name);
                if (phone_number.replaceAll("\\s+","").equalsIgnoreCase(name.replaceAll("\\s+",""))){
                    JOptionPane.showMessageDialog(this,"Phone number is already exist","Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        } catch (SQLException e) {

            System.out.println("Error");
        }

        //System.out.println(menu_name + discount + amount + price); Testing
        //Calling method to insert data for the table.
        DBHelper.addRoom(room_type,room_floor_no,room_category,room_status,room_package,phone_number,numberof_adults,numberof_childrens,des);

        //update message dispaly
        JOptionPane.showMessageDialog(this, "Add Successfully..!");
        //Database Operation validaton.

        floor_no.setText("");
        phone_no.setText("");
        max_adults.setText("");
        max_childrens.setText("");
        description.setText("");

        fillRoomtable(); //To refresh the table
        FillDropDown(); //To refresh the drop down item list.
    }//GEN-LAST:event_jButton1AddRoom

    private void btn_delete_roomDeleteRoomDetails(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_delete_roomDeleteRoomDetails

        //Validations
        if(TEMP_TEXT3.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Please select an Item!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        int opt = JOptionPane.showConfirmDialog(null, "Are you sure to Delete", "Delete", JOptionPane.YES_NO_OPTION);

        if(opt == 0){
            //Getting data from the text fields
            int id = Integer.parseInt(TEMP_TEXT3.getText());
            String delete_type = type.getSelectedItem().toString();
            int floorNo = Integer.parseInt(floor_no.getText());
            String delete_category = category.getSelectedItem().toString();
            String delete_status = status.getSelectedItem().toString();
            String delete_package = package_name.getSelectedItem().toString();
            String phoneNo = phone_no.getText();
            int maxAdults = Integer.parseInt(max_adults.getText());
            int maxChildrens = Integer.parseInt(max_childrens.getText());
            String des = description.getText();

            boolean deleteStatus = DBHelper.deleteRoomDetails(id, delete_type, floorNo, delete_category, delete_status, delete_package, phoneNo, maxAdults, maxChildrens, des);

            if (deleteStatus == true){
                JOptionPane.showMessageDialog(this,"Deleted successfully","Massage",JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this,"Something is wrong with delete!","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }

            fillRoomtable();

            floor_no.setText("");
            //package_name.setText("");
            phone_no.setText("");
            max_adults.setText("");
            max_childrens.setText("");
            description.setText("");

        }
    }//GEN-LAST:event_btn_delete_roomDeleteRoomDetails

    private void searchRoomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchRoomKeyReleased
        DefaultTableModel table = (DefaultTableModel)RoomTableDetails.getModel();
        String search = searchRoom.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        RoomTableDetails.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_searchRoomKeyReleased

    private void RoomTableDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RoomTableDetailsMouseClicked

        DefaultTableModel tableModel = (DefaultTableModel) RoomTableDetails.getModel();

        //Getting and process information from the table
        String id_string = tableModel.getValueAt(RoomTableDetails.getSelectedRow(),0).toString();
        String type_name = tableModel.getValueAt(RoomTableDetails.getSelectedRow(),1).toString();

        /*switch(type_name){
            case "Ac":
            type.setSelectedIndex(0);
            break;

            case "Non Ac":
            type.setSelectedIndex(1);
            break;

        }

        if(type_name.equals("Ac")){
            type.setSelectedIndex(0);
        }else if(type_name.equals("Non Ac")){
            type.setSelectedIndex(1);
        }*/

        for(int i=0; i< type.getItemCount(); i++){
            if(type.getItemAt(i).toString().equalsIgnoreCase(type_name)){

                type.setSelectedIndex(i);
            }

        }

        String floorno_string = tableModel.getValueAt(RoomTableDetails.getSelectedRow(),2).toString();
        //String category_name = tableModel.getValueAt(RoomTableDetails.getSelectedRow(),3).toString();

        String category_name = tableModel.getValueAt(RoomTableDetails.getSelectedRow(),3).toString();
        switch(category_name){
            case "Single":
            type.setSelectedIndex(1);
            break;

            case "Double":
            type.setSelectedIndex(2);
            break;

            case "Family":
            type.setSelectedIndex(3);
            break;

        }

        String status_name = tableModel.getValueAt(RoomTableDetails.getSelectedRow(),4).toString();

        switch(status_name){
            case "Available":
            type.setSelectedIndex(1);
            break;

            case "Cleaning":
            type.setSelectedIndex(2);
            break;

            case "Full":
            type.setSelectedIndex(3);
            break;

        }

        String packageName = tableModel.getValueAt(RoomTableDetails.getSelectedRow(),5).toString();
        String phoneno_string = tableModel.getValueAt(RoomTableDetails.getSelectedRow(),6).toString();
        String adults = tableModel.getValueAt(RoomTableDetails.getSelectedRow(),7).toString();
        String childrens = tableModel.getValueAt(RoomTableDetails.getSelectedRow(),8).toString();
        String desc = tableModel.getValueAt(RoomTableDetails.getSelectedRow(),9).toString();

        //Set information to the text fields
        TEMP_TEXT3.setText(id_string);
        //type.setSelectedItem(type_name);
        floor_no.setText(floorno_string);
        //category.setSelectedItem(category_name);
        //status.setSelectedItem(status_name);
        //package_name.setText(packageName);
        phone_no.setText(phoneno_string);
        max_adults.setText(adults);
        max_childrens.setText(childrens);
        description.setText(desc);

    }//GEN-LAST:event_RoomTableDetailsMouseClicked

    private void btn_update_roomUpdateRoomDetails(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_update_roomUpdateRoomDetails
        //Validations
        if(TEMP_TEXT3.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Please select an Item!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Getting data from the text fields
        int id = Integer.parseInt(TEMP_TEXT3.getText());
        String new_type = type.getSelectedItem().toString();
        int floorNo = Integer.parseInt(floor_no.getText());
        String new_category = category.getSelectedItem().toString();
        String new_status = status.getSelectedItem().toString();
        String new_package = package_name.getSelectedItem().toString();
        String phoneNo = phone_no.getText();
        int maxAdults = Integer.parseInt(max_adults.getText());
        int maxChildrens = Integer.parseInt(max_childrens.getText());
        String des = description.getText();

        //Validating whether the name exists
        DBHelper dbhelper = new DBHelper();
        ResultSet rs = dbhelper.SelectRoom();
        /*try{
            String phone_number;
            while(rs.next()){
                phone_number = rs.getString("Phone_No");
                //System.out.println(name);
                if (phoneNo.replaceAll("\\s+","").equalsIgnoreCase(phone_number.replaceAll("\\s+",""))){
                    JOptionPane.showMessageDialog(this,"Such menu is already exist","Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        } catch (SQLException e) {

            System.out.println("Error");
        }*/

        //Calling the update method from the DBHelper
        boolean newstatus = DBHelper.updateRoomDetails(id, new_type,floorNo,new_category,new_status,new_package,phoneNo,maxAdults,maxChildrens,des);
        if (newstatus == true){
            JOptionPane.showMessageDialog(this,"Updated successfully","Massage",JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this,"Something is wrong with update!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        fillRoomtable(); //refresh the table

    }//GEN-LAST:event_btn_update_roomUpdateRoomDetails

    private void packagenameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_packagenameKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if(Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)){
            packagename.setEditable(true);
        }else{
            packagename.setEditable(false);
        }
    }//GEN-LAST:event_packagenameKeyTyped

    private void priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(price.equals("")){
            priceKey.setText("Please enter package price");
        }
        if(Character.isLetter(c)){
            //can't able to enter in text field if enter char is not number
            price.setEditable(false);
            //set error msg
            priceKey.setText("Please enter numbers only");

            // price.setText("");

        }
        else{
            price.setEditable(true);
            //priceKey.setEnabled(false);
            priceKey.setText("");
        }
    }//GEN-LAST:event_priceKeyPressed

    private void discountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            //can't able to enter in text field if enter char is not number
            discount.setEditable(false);
            //set error msg
            discountKey.setText("Please enter numbers only");

            // price.setText("");

        }else{
            discount.setEditable(true);
            //priceKey.setEnabled(false);
            discountKey.setText("");
        }
    }//GEN-LAST:event_discountKeyPressed

    private void jButton6AddPackage(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6AddPackage
        String package_name = packagename.getText();
        String package_price = price.getText();
        String package_discount = discount.getText();
        //double package_price = Double.parseDouble(price.getText());
        //double package_discount = Double.parseDouble(discount.getText());

        //validation
        if(packagename.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the Package name","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(price.getText().equals("")){
            //priceKey.setText("Please enter package price");
            JOptionPane.showMessageDialog(this, "Please enter the Package price","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(discount.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the Package Discount","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Validation to see if the item is already exist in the table.
        DBHelper dbhelper = new DBHelper();
        ResultSet rs = dbhelper.SelectPackage();

        try{
            String name;
            while(rs.next()){
                name = rs.getString("Name");
                //System.out.println(name);
                if (package_name.replaceAll("\\s+","").equalsIgnoreCase(name.replaceAll("\\s+",""))){
                    JOptionPane.showMessageDialog(this,"Package is already exist","Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        } catch (SQLException e) {

            System.out.println("Error");
        }

        //creating exception
        double price_package = 0;
        double discount_package = 0;
        try{
            price_package = Double.parseDouble(package_price);
            discount_package = Double.parseDouble(package_discount);

        } catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Please Enter numbers","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        //calling method to insert
        DBHelper.addPackage(package_name,price_package,discount_package);

        //update message dispaly
        JOptionPane.showMessageDialog(this, "Add Successfully..!");

        packagename.setText("");
        price.setText("");
        discount.setText("");

        fillPackagetable();
    }//GEN-LAST:event_jButton6AddPackage

    private void btnUpdatePackageUpdatePackageTable(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdatePackageUpdatePackageTable

        //Validations
        if(TEMP_TXT2.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Please select an Item!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Getting data from the text field
        int id = Integer.parseInt(TEMP_TXT2.getText());
        String name = packagename.getText();
        double package_price = Double.parseDouble(price.getText());
        double package_discount = Double.parseDouble(discount.getText());

        //Validating whether the name exists
        DBHelper dbhelper = new DBHelper();
        ResultSet rs = dbhelper.SelectPackage();

        /*try{
            String name_of_package;
            while(rs.next()){
                name_of_package = rs.getString("Name");
                //System.out.println(name);
                if (name.replaceAll("\\s+","").equalsIgnoreCase(name_of_package.replaceAll("\\s+",""))){
                    JOptionPane.showMessageDialog(this,"Such name is already exist","Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        } catch (SQLException e) {

            System.out.println("Error");
        }*/

        //Calling the update method from the DBHelper
        boolean status = DBHelper.updatePackageTable(id,name,package_price,package_discount);
        if (status == true){
            JOptionPane.showMessageDialog(this,"Updated successfully","Massage",JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this,"Something is wrong with update!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        //refresh facility table
        fillPackagetable();
        FillDropDown();
        fillPackageFacilitytable();

    }//GEN-LAST:event_btnUpdatePackageUpdatePackageTable

    private void btn_add_packagefacilityAddPackageFacility(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_add_packagefacilityAddPackageFacility

        //Getting data from the interface
        String Package = PackageCombo.getSelectedItem().toString();
        String Facility = FacilityCombo.getSelectedItem().toString();

        System.out.println(Package + Facility);

        //Validation
        if(Package.equals("")){
            JOptionPane.showMessageDialog(this,"Please select a Package before adding","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(Facility.equals("")){
            JOptionPane.showMessageDialog(this,"Please select a Facility before adding","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Calling the DB method to add
        boolean status = DBHelper.addPackageFacility(Package, Facility);

        //Database Operation validaton.
        if(status == true){
            JOptionPane.showMessageDialog(this,"Successfully added to the database","Confirmation",JOptionPane.INFORMATION_MESSAGE);
        } else if (status == false) {
            JOptionPane.showMessageDialog(this,"Something is wrong!","Error",JOptionPane.ERROR_MESSAGE);
        }

        //Update the table soon after adding something.
        fillPackageFacilitytable();
    }//GEN-LAST:event_btn_add_packagefacilityAddPackageFacility

    private void searchpackageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchpackageKeyReleased

        DefaultTableModel table = (DefaultTableModel)packageDetailsTable.getModel();
        String search = searchpackage.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        packageDetailsTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_searchpackageKeyReleased

    private void packageDetailsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_packageDetailsTableMouseClicked
        //set data to text field when raw is selected

        DefaultTableModel tblmodel = (DefaultTableModel)packageDetailsTable.getModel();

        //set data to text field when raw is selected
        String id_string = tblmodel.getValueAt(packageDetailsTable.getSelectedRow(),0).toString();
        String package_name = tblmodel.getValueAt(packageDetailsTable.getSelectedRow(),1).toString();
        String price_string = tblmodel.getValueAt(packageDetailsTable.getSelectedRow(),2).toString();
        String discount_string = tblmodel.getValueAt(packageDetailsTable.getSelectedRow(),3).toString();

        //set to textfield
        TEMP_TXT2.setText(id_string);
        packagename.setText(package_name);
        price.setText(price_string);
        discount.setText(discount_string);
    }//GEN-LAST:event_packageDetailsTableMouseClicked

    private void btn_delete_packageDeletePackageDetails(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_delete_packageDeletePackageDetails
        //Validations
        if(TEMP_TXT2.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Please select an Item!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        int opt = JOptionPane.showConfirmDialog(null, "Are you sure to Delete", "Delete", JOptionPane.YES_NO_OPTION);

        if(opt == 0){
            //Getting data from the text field
            int id = Integer.parseInt(TEMP_TXT2.getText());
            String name = packagename.getText();
            double package_price = Double.parseDouble(price.getText());
            double package_discount = Double.parseDouble(discount.getText());

            boolean status = DBHelper.deletePackageDetails(id, name, package_price, package_discount);

            if (status == true){
                JOptionPane.showMessageDialog(this,"Deleted successfully","Massage",JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this,"Something is wrong with delete!","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }

            fillPackagetable();

            packagename.setText("");
            price.setText("");
            discount.setText("");

        }
    }//GEN-LAST:event_btn_delete_packageDeletePackageDetails

    private void facilitynameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_facilitynameKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if(Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)){
            facilityname.setEditable(true);
        }else{
            facilityname.setEditable(false);
        }
    }//GEN-LAST:event_facilitynameKeyTyped

    private void jButton3AddFacility(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3AddFacility
        String facility_name = facilityname.getText();

        //validation
        if(facilityname.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the facility name","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Validation to see if the item is already exist in the table.
        DBHelper dbhelper = new DBHelper();
        ResultSet rs = dbhelper.SelectFacility();

        try{
            String name;
            while(rs.next()){
                name = rs.getString("name");
                //System.out.println(name);
                if (facility_name.replaceAll("\\s+","").equalsIgnoreCase(name.replaceAll("\\s+",""))){
                    JOptionPane.showMessageDialog(this,"Facility is already exist","Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        } catch (SQLException e) {

            System.out.println("Error");
        }

        DBHelper.addFacility(facility_name);
        //update message dispaly
        JOptionPane.showMessageDialog(this, "Add Successfully..!");
        facilityname.setText("");

        fillFacilityTable();
    }//GEN-LAST:event_jButton3AddFacility

    private void facilitytableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_facilitytableMouseClicked
        //set data to text field when raw is selected

        DefaultTableModel tblmodel = (DefaultTableModel)facilitytable.getModel();

        //set data to text field when raw is selected
        String id_string = tblmodel.getValueAt(facilitytable.getSelectedRow(),0).toString();
        String facility_name = tblmodel.getValueAt(facilitytable.getSelectedRow(),1).toString();

        //set to textfield
        TEMP_TEXT.setText(id_string);
        facilityname.setText(facility_name);
    }//GEN-LAST:event_facilitytableMouseClicked

    private void btnUpdateUpdateFacilityTable(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateUpdateFacilityTable

        //Validations

        if(TEMP_TEXT.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Please select an Item!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Getting data from the text field
        int id = Integer.parseInt(TEMP_TEXT.getText());
        String name = facilityname.getText();

        //Validating whether the name exists
        DBHelper dbhelper = new DBHelper();
        ResultSet rs = dbhelper.SelectFacility();

        try{
            String name_facility;
            while(rs.next()){
                name_facility = rs.getString("name");
                //System.out.println(name);
                if (name.replaceAll("\\s+","").equalsIgnoreCase(name_facility.replaceAll("\\s+",""))){
                    JOptionPane.showMessageDialog(this,"Such menu is already exist","Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        } catch (SQLException e) {

            System.out.println("Error");
        }

        //Calling the update method from the DBHelper
        boolean status = DBHelper.updateFacilityTable(id,name);
        if (status == true){
            JOptionPane.showMessageDialog(this,"Updated successfully","Massage",JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this,"Something is wrong with update!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        //refresh facility table
        fillFacilityTable();
    }//GEN-LAST:event_btnUpdateUpdateFacilityTable

    private void btnDeleteDeleteFacilityDetails(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteDeleteFacilityDetails
        //Validations

        if(TEMP_TEXT.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Please select an Item!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        int opt = JOptionPane.showConfirmDialog(null, "Are you sure to Delete", "Delete", JOptionPane.YES_NO_OPTION);

        if(opt == 0){
            int id = Integer.parseInt(TEMP_TEXT.getText());
            String name_delete = facilityname.getText();

            //Validating whether the name exists
            DBHelper dbhelper = new DBHelper();
            ResultSet rs = dbhelper.SelectFacility();

            boolean status = DBHelper.deleteFacilityDetails(id,name_delete);

            if (status == true){
                JOptionPane.showMessageDialog(this,"Deleted successfully","Massage",JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this,"Something is wrong with delete!","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }

            fillFacilityTable();

            //TEMP_TEXT.setText(id);
            facilityname.setText("");
        }

    }//GEN-LAST:event_btnDeleteDeleteFacilityDetails

    private void qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            //can't able to enter in text field if enter char is not number
            qty.setEditable(false);
            //set error msg
            qtyKey.setText("Please enter numbers only");

            // price.setText("");

        }else{
            qty.setEditable(true);
            //priceKey.setEnabled(false);
            qtyKey.setText("");
        }
    }//GEN-LAST:event_qtyKeyPressed

    private void amountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            //can't able to enter in text field if enter char is not number
            amount.setEditable(false);
            //set error msg
            amountKey.setText("Please enter numbers only");

            // price.setText("");

        }else{
            amount.setEditable(true);
            //priceKey.setEnabled(false);
            amountKey.setText("");
        }
    }//GEN-LAST:event_amountKeyPressed

    private void jButton4AddInventoryRequest(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4AddInventoryRequest

        String item_name = inventoryItem.getSelectedItem().toString();
        String item_quantity = qty.getText();
        String item_amount = amount.getText();
        String theDate = null;
        String item_cid = txtcid.getText();
        //check date is selected
        try{
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            theDate = dateFormat.format(date.getDate());
            DefaultTableModel model = (DefaultTableModel)InventoryRequestTableDetails.getModel();
            model.addRow(new Object[] {theDate});
        }
        catch(Exception ex){
            //JOptionPane.showMessageDialog(null, "NO Date Sellected");
        }

        //validation
        if(inventoryItem.getSelectedItem().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the item","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(qty.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the item quantity","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(amount.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the item price","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(txtcid.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please select the customer id","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        //creating exception
        int quantity;
        double itemAmount;
        int custID;

        try{
            quantity = Integer.parseInt(item_quantity);
            itemAmount = Double.parseDouble(item_amount);
            custID = Integer.parseInt(item_cid);

        } catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Please Enter correct format","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        DBHelper.addInventoryRequest(item_name,quantity,itemAmount,theDate,custID);
        //update message dispaly
        JOptionPane.showMessageDialog(this, "Add Successfully..!");

        qty.setText("");
        amount.setText("");
        txtcid.setText("");
        //date.setDate(date);

        fillInventoryRequestTable();
    }//GEN-LAST:event_jButton4AddInventoryRequest

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ResetInventoryRequest(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5ResetInventoryRequest

        inventoryItem.setSelectedItem("");
        qty.setText("");
        amount.setText("");
        txtcid.setText("");
        //date.setText("");

    }//GEN-LAST:event_jButton5ResetInventoryRequest

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void searchInRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchInRequestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchInRequestActionPerformed

    private void searchInRequestKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchInRequestKeyReleased
        DefaultTableModel table = (DefaultTableModel)InventoryRequestTableDetails.getModel();
        String search = searchInRequest.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        InventoryRequestTableDetails.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_searchInRequestKeyReleased

    private void requestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tblmodel = (DefaultTableModel)requestTable.getModel();

        //set data to text field when raw is selected
        String cid_string = tblmodel.getValueAt(requestTable.getSelectedRow(),0).toString();

        //set to textfield
        txtcid.setText(cid_string);

    }//GEN-LAST:event_requestTableMouseClicked

    private void searchcustnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchcustnameKeyReleased
        DefaultTableModel table = (DefaultTableModel)requestTable.getModel();
        String search = searchcustname.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        requestTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_searchcustnameKeyReleased

    private void amountKeyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountKeyKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_amountKeyKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //        try {
            //            //Calling the method
            //            DBHelper.genarateRoomReport();
            //        } catch (JRException  | java.lang.NumberFormatException e) {
            //            e.printStackTrace();
            //        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //       try {
            //            //Calling the method
            //            DBHelper.genaratePackageReport();
            //        } catch (JRException  | java.lang.NumberFormatException e) {
            //            e.printStackTrace();
            //        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void HomeBtnmouseexited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeBtnmouseexited
        // TODO add your handling code here:
    }//GEN-LAST:event_HomeBtnmouseexited

    private void HomeBtnmouseentered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeBtnmouseentered
        // TODO add your handling code here:
    }//GEN-LAST:event_HomeBtnmouseentered

    private void HomeBtnmouseclicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeBtnmouseclicked

        if(evt.getSource() == addRoomDetailsPannel)
        {
            addRoomDetailsPannel.setBackground(new Color(227,138,174));
        }

        if(evt.getSource() == addPackageDetailsPannel)
        {
            addPackageDetailsPannel.setBackground(new Color(227,138,174));
        }
        if(evt.getSource() == addFacilityDetailsPannel)
        {
            addFacilityDetailsPannel.setBackground(new Color(227,138,174));
        }
        // if(evt.getSource() == pkitchen)
        // {
            //     pkitchen.setBackground(new Color(227,138,174));
            // }
        if(evt.getSource() == addInventoryRequestDetailsPannel)
        {
            addInventoryRequestDetailsPannel.setBackground(new Color(227,138,174));
        }
        if(evt.getSource() == addroomDetailsReportPannel)
        {
            addroomDetailsReportPannel.setBackground(new Color(227,138,174));
        }

        if(evt.getSource() == addRoomDetailsPannel){
            addRoom.setVisible(true);
            addPackage.setVisible(false);
            addFacilities.setVisible(false);
            kitchenRequest.setVisible(false);
            inventoryRequest.setVisible(false);
            reports.setVisible(false);
        }

        if(evt.getSource() == addPackageDetailsPannel){
            addRoom.setVisible(false);
            addPackage.setVisible(true);
            addFacilities.setVisible(false);
            kitchenRequest.setVisible(false);
            inventoryRequest.setVisible(false);
            reports.setVisible(false);
        }

        if(evt.getSource() == addFacilityDetailsPannel){
            addRoom.setVisible(false);
            addPackage.setVisible(false);
            addFacilities.setVisible(true);
            kitchenRequest.setVisible(false);
            inventoryRequest.setVisible(false);
            reports.setVisible(false);
        }

        // if(evt.getSource() == pkitchen){
            //     addRoom.setVisible(false);
            //     addPackage.setVisible(false);
            //      addFacilities.setVisible(false);
            //      kitchenRequest.setVisible(true);
            //       inventoryRequest.setVisible(false);
            //     reports.setVisible(false);
            //  }

        if(evt.getSource() == addInventoryRequestDetailsPannel){
            addRoom.setVisible(false);
            addPackage.setVisible(false);
            addFacilities.setVisible(false);
            kitchenRequest.setVisible(false);
            inventoryRequest.setVisible(true);
            reports.setVisible(false);
        }

        if(evt.getSource() == addroomDetailsReportPannel){
            addRoom.setVisible(false);
            addPackage.setVisible(false);
            addFacilities.setVisible(false);
            kitchenRequest.setVisible(false);
            inventoryRequest.setVisible(false);
            reports.setVisible(true);
        }

        //Going back to the Home page
        if(evt.getSource() == addRoomDetailsPannel){
            MainMenu m1 = new MainMenu();
            this.setVisible(false);
            m1.setVisible(true);
        }
    }//GEN-LAST:event_HomeBtnmouseclicked

    private void addRoomDetailsPannelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addRoomDetailsPannelMouseClicked
        // TODO add your handling code here:
        HomeBtnmouseclicked(evt);
    }//GEN-LAST:event_addRoomDetailsPannelMouseClicked

    private void addPackageDetailsPannelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPackageDetailsPannelMouseClicked
        // TODO add your handling code here:
        HomeBtnmouseclicked(evt);
    }//GEN-LAST:event_addPackageDetailsPannelMouseClicked

    private void addFacilityDetailsPannelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFacilityDetailsPannelMouseClicked
        // TODO add your handling code here:
        HomeBtnmouseclicked(evt);
    }//GEN-LAST:event_addFacilityDetailsPannelMouseClicked

    private void addInventoryRequestDetailsPannelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addInventoryRequestDetailsPannelMouseClicked
        // TODO add your handling code here:
        HomeBtnmouseclicked(evt);
    }//GEN-LAST:event_addInventoryRequestDetailsPannelMouseClicked

    private void addroomDetailsReportPannelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addroomDetailsReportPannelMouseClicked
        // TODO add your handling code here:
        HomeBtnmouseclicked(evt);
    }//GEN-LAST:event_addroomDetailsReportPannelMouseClicked

    //--------------------Drop down---------------------------------
    //fill drop down facilities in the add package page
    public void FillDropDown(){
        
        DBHelper dbhelper = new DBHelper();
        ResultSet rs = dbhelper.SelectPackage();
        
        //Removing the default vales in the drop downs
        PackageCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        FacilityCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        
        try{
            String name;
            while(rs.next()){
                name = rs.getString(roompackage_name);
                PackageCombo.addItem(name);
        }        
       }catch(SQLException e){
                 System.out.println("Something is wrong with a drop down Package - Facility Drop Down from the 1st page");  
        }
            
             //Setting the Item drop down in the first page
        ResultSet rs2 = dbhelper.SelectFacility();
        
        try{
                String facility_name;
                while(rs2.next()){
                facility_name = rs2.getString(Facility.room_facility_name);
                FacilityCombo.addItem(facility_name);
            }
       } catch(SQLException e){
         System.out.println("Something is wrong with a drop down Package - Facility Drop Down from the 1st page");
       }
        
    }
    
    //} 
    
    //-------------------- Creating Table Filling method --------------------
    //Creating a Method to fill the Room table
    public  void fillRoomtable()
    {
        //Creating a Database Helper object
        DBHelper dbhelper = new DBHelper();
        //Calling method 
        ResultSet rs = dbhelper.SelectRoom();
        //set the table view
        RoomTableDetails.setModel(DbUtils.resultSetToTableModel(rs));
    }
    
    //crating method to fill the package table
    public  void fillPackagetable()
    {
        //Creating a Database Helper object
        DBHelper dbhelper = new DBHelper();
        //Calling method 
        ResultSet rs = dbhelper.SelectPackage();
        //set the table view
        packageDetailsTable.setModel(DbUtils.resultSetToTableModel(rs));
    }
    
    //creating method to fill the facility table
    public void fillFacilityTable(){
        //Creating a Database Helper object
        DBHelper dbhelper = new DBHelper();
        //Calling method 
        ResultSet rs = dbhelper.SelectFacility();
        //set the table view
        facilitytable.setModel(DbUtils.resultSetToTableModel(rs));
    
    }
    
    //creating method to fill the inventory request table
    
    public void fillInventoryRequestTable(){
        //Creating a Database Helper object
        DBHelper dbhelper = new DBHelper();
        //Calling method 
        ResultSet rs = dbhelper.SelectInventoryRequest();
        //set the table view
        InventoryRequestTableDetails.setModel(DbUtils.resultSetToTableModel(rs));
    
    }
    
    public void fillPackageFacilitytable(){
        
     //Creating the instance from the database Helper class 
        DBHelper dbhelper = new DBHelper();
        //Receiving the resultSet
        ResultSet rs = dbhelper.SelectPackageFacility();
        //Set table view
        PackageIntofacilityTable.setModel(DbUtils.resultSetToTableModel (rs));
    
    
    }
    
    public void fillCustomerInventoytable(){
    
        //Creating the instance from the database Helper class 
        DBHelper dbhelper = new DBHelper();
        //Receiving the resultSet
        ResultSet rs = dbhelper.SelectCustomerDetails();
        //Set table view
        requestTable.setModel(DbUtils.resultSetToTableModel (rs));  
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> FacilityCombo;
    private javax.swing.JPanel HomeBtn;
    private javax.swing.JTable InventoryRequestTableDetails;
    private javax.swing.JComboBox<String> PackageCombo;
    private javax.swing.JTable PackageIntofacilityTable;
    private javax.swing.JTable RoomTableDetails;
    private javax.swing.JTextField TEMP_TEXT;
    private javax.swing.JTextField TEMP_TEXT3;
    private javax.swing.JTextField TEMP_TXT2;
    private javax.swing.JPanel addFacilities;
    private javax.swing.JButton addFacilityDetailsPannel;
    private javax.swing.JButton addInventoryRequestDetailsPannel;
    private javax.swing.JPanel addPackage;
    private javax.swing.JButton addPackageDetailsPannel;
    private javax.swing.JPanel addRoom;
    private javax.swing.JButton addRoomDetailsPannel;
    private javax.swing.JButton addroomDetailsReportPannel;
    private javax.swing.JLabel adultKey;
    private javax.swing.JLabel adults;
    private javax.swing.JLabel adultsKey;
    private javax.swing.JTextField amount;
    private javax.swing.JLabel amountKey;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdatePackage;
    private javax.swing.JButton btn_add_packagefacility;
    private javax.swing.JButton btn_delete_package;
    private javax.swing.JButton btn_delete_room;
    private javax.swing.JButton btn_update_room;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> category;
    private javax.swing.JLabel children;
    private javax.swing.JLabel childrenKey;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JTextField description;
    private javax.swing.JTextField discount;
    private javax.swing.JLabel discountKey;
    private javax.swing.JTextField facilityname;
    private javax.swing.JTable facilitytable;
    private javax.swing.JLabel floorKey;
    private javax.swing.JTextField floor_no;
    private javax.swing.JComboBox<String> inventoryItem;
    private javax.swing.JPanel inventoryRequest;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPanel kitchenRequest;
    private javax.swing.JTextField max_adults;
    private javax.swing.JTextField max_childrens;
    private javax.swing.JTable packageDetailsTable;
    private javax.swing.JComboBox<String> package_name;
    private javax.swing.JTextField packagename;
    private javax.swing.JPanel panel_center;
    private javax.swing.JPanel panel_centerNew;
    private javax.swing.JTextField phone_no;
    private javax.swing.JTextField price;
    private javax.swing.JLabel priceKey;
    private javax.swing.JTextField qty;
    private javax.swing.JLabel qtyKey;
    private javax.swing.JPanel reports;
    private javax.swing.JTable requestTable;
    private javax.swing.JTextField searchInRequest;
    private javax.swing.JTextField searchRoom;
    private javax.swing.JTextField searchcustname;
    private javax.swing.JTextField searchpackage;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JTextField txtcid;
    private javax.swing.JComboBox<String> type;
    // End of variables declaration//GEN-END:variables
}
