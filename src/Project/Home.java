/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

import SQL.DBHelper;
import Table.TableModel;
import static Table.TableModel.Ingredienttable.COL2_3;
import static Table.TableModel.Itemtable.COL1_2;
import static Table.TableModel.Menutable.COL2;
import java.sql.ResultSet;
import java.awt.Color;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JRException;



/**
 *
 * @author Nirmith Akash
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        //Populating Table for the UI initially.
        fillItemtable();
        fillMenutable();
        fillIngredtable();
        fillMenuItemtable();
        fillItemIngred();
        fillOrdertable();
        fillSimpleOrder();
        //Populating Drop Downs 
        FillDropDown();
        //Initialize holders 
        TMP_ID_HOLDER.setVisible(false);
        TMP_ID_HOLDER.setEditable(false);
        
        TMP_ID_HOLDER_2.setVisible(false);
        TMP_ID_HOLDER_2.setEditable(false);
        
        TMP_ID_HOLDER_3.setVisible(false);
        TMP_ID_HOLDER_3.setEditable(false);
        
        TMP_ID_HOLDER_4.setVisible(false);
        TMP_ID_HOLDER_4.setEditable(false);
        
        requestId_HOLDER.setEditable(false);
        requestId_HOLDER.setDisabledTextColor(Color.red);
        
        TMP_SIMPLE_ID_HOLDER.setEditable(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        UserReports = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        Side_panel = new javax.swing.JPanel();
        btn_add_menu = new javax.swing.JPanel();
        lbl_add_menu = new javax.swing.JLabel();
        btn_add_items = new javax.swing.JPanel();
        lbl_add_items = new javax.swing.JLabel();
        btn_create_menu = new javax.swing.JPanel();
        lbl_create_menu = new javax.swing.JLabel();
        btn_customer_order = new javax.swing.JPanel();
        lbl_customer_order = new javax.swing.JLabel();
        btn_report = new javax.swing.JPanel();
        lbl_customer_order2 = new javax.swing.JLabel();
        Home_Btn = new javax.swing.JPanel();
        Lbl_Home_Name = new javax.swing.JLabel();
        Center_Panel = new javax.swing.JPanel();
        Add_menu = new javax.swing.JPanel();
        Add_Menu_Lable = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        MenuName = new javax.swing.JTextField();
        Discount = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        MenuCombo = new javax.swing.JComboBox<>();
        Add_Menu_Lable1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ItemCombo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        MenuintoItemTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        MenuItemTable = new javax.swing.JTable();
        UpdateMenu = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        Add_Menu_Lable2 = new javax.swing.JLabel();
        MenuDelete = new javax.swing.JButton();
        TMP_ID_HOLDER = new javax.swing.JTextField();
        SearchMenu = new javax.swing.JTextField();
        SearchMenuAndItem = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        Genarate_report = new javax.swing.JPanel();
        jSeparator8 = new javax.swing.JSeparator();
        jScrollPane10 = new javax.swing.JScrollPane();
        SimpleOrderTable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        SingleReportRadio = new javax.swing.JRadioButton();
        MonthlyReportRadio = new javax.swing.JRadioButton();
        GeranerateReport = new javax.swing.JButton();
        TMP_SIMPLE_ID_HOLDER = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        YearDropDown = new javax.swing.JComboBox<>();
        MonthDropDown = new javax.swing.JComboBox<>();
        Add_item = new javax.swing.JPanel();
        FoodItemName = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        Add_Menu_Lable3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        AddFoodItem = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        FoodItemTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        ItemDelete = new javax.swing.JButton();
        FoodItemPrice = new javax.swing.JTextField();
        SearchItems = new javax.swing.JTextField();
        TMP_ID_HOLDER_2 = new javax.swing.JTextField();
        ItemUpdate = new javax.swing.JButton();
        Create_menu = new javax.swing.JPanel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        IngredName = new javax.swing.JTextField();
        AddIngred = new javax.swing.JButton();
        UpdateIngred = new javax.swing.JButton();
        Add_Menu_Lable4 = new javax.swing.JLabel();
        Add_Menu_Lable5 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jScrollPane5 = new javax.swing.JScrollPane();
        ItemIngredTable = new javax.swing.JTable();
        Add_Menu_Lable6 = new javax.swing.JLabel();
        ItemComboInIgred = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        IngredAmount = new javax.swing.JTextField();
        IngredCombo = new javax.swing.JComboBox<>();
        IngredAmountLbl = new javax.swing.JLabel();
        AddItemIngred = new javax.swing.JButton();
        DeleteIngred = new javax.swing.JButton();
        IngredItemDelete = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        IngredItemTable = new javax.swing.JTable();
        Add_Menu_Lable8 = new javax.swing.JLabel();
        SearchIngred = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        TMP_ID_HOLDER_3 = new javax.swing.JTextField();
        TMP_ID_HOLDER_4 = new javax.swing.JTextField();
        Customer_Order = new javax.swing.JPanel();
        jSeparator7 = new javax.swing.JSeparator();
        jScrollPane7 = new javax.swing.JScrollPane();
        OrderTable = new javax.swing.JTable();
        Add_Menu_Lable9 = new javax.swing.JLabel();
        Add_Menu_Lable10 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        requestId_HOLDER = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        EmployeeName = new javax.swing.JComboBox<>();
        AddItemTotheList = new javax.swing.JButton();
        SubmitOrderItems = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        AllFoodItemList = new javax.swing.JList<>();
        MenuComboinOrder = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        SelectedFoodItemList = new javax.swing.JList<>();
        MenuItemLoad = new javax.swing.JButton();
        RemoveItems = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        OrderTableSearch = new javax.swing.JTextField();
        PlaceOrder = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1366, 768));

        jPanel1.setMaximumSize(new java.awt.Dimension(1360, 590));
        jPanel1.setMinimumSize(new java.awt.Dimension(1360, 590));
        jPanel1.setPreferredSize(new java.awt.Dimension(1360, 590));
        jPanel1.setLayout(new java.awt.BorderLayout());

        Side_panel.setBackground(new java.awt.Color(51, 51, 51));

        btn_add_menu.setBackground(new java.awt.Color(204, 204, 204));
        btn_add_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Home.this.mouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEnter(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseExit(evt);
            }
        });

        lbl_add_menu.setBackground(new java.awt.Color(102, 102, 102));
        lbl_add_menu.setFont(new java.awt.Font("NK57 Monospace Rg", 1, 18)); // NOI18N
        lbl_add_menu.setText("Add Menu");

        javax.swing.GroupLayout btn_add_menuLayout = new javax.swing.GroupLayout(btn_add_menu);
        btn_add_menu.setLayout(btn_add_menuLayout);
        btn_add_menuLayout.setHorizontalGroup(
            btn_add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_add_menuLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lbl_add_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btn_add_menuLayout.setVerticalGroup(
            btn_add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_add_menuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_add_menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btn_add_items.setBackground(new java.awt.Color(204, 204, 204));
        btn_add_items.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Home.this.mouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEnter(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseExit(evt);
            }
        });

        lbl_add_items.setBackground(new java.awt.Color(102, 102, 102));
        lbl_add_items.setFont(new java.awt.Font("NK57 Monospace Rg", 1, 18)); // NOI18N
        lbl_add_items.setText("Add Item");

        javax.swing.GroupLayout btn_add_itemsLayout = new javax.swing.GroupLayout(btn_add_items);
        btn_add_items.setLayout(btn_add_itemsLayout);
        btn_add_itemsLayout.setHorizontalGroup(
            btn_add_itemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_add_itemsLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lbl_add_items, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btn_add_itemsLayout.setVerticalGroup(
            btn_add_itemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_add_itemsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_add_items, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btn_create_menu.setBackground(new java.awt.Color(204, 204, 204));
        btn_create_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Home.this.mouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEnter(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseExit(evt);
            }
        });

        lbl_create_menu.setBackground(new java.awt.Color(102, 102, 102));
        lbl_create_menu.setFont(new java.awt.Font("NK57 Monospace Rg", 1, 18)); // NOI18N
        lbl_create_menu.setText("Add Ingredients ");

        javax.swing.GroupLayout btn_create_menuLayout = new javax.swing.GroupLayout(btn_create_menu);
        btn_create_menu.setLayout(btn_create_menuLayout);
        btn_create_menuLayout.setHorizontalGroup(
            btn_create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_create_menuLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lbl_create_menu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btn_create_menuLayout.setVerticalGroup(
            btn_create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_create_menu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        btn_customer_order.setBackground(new java.awt.Color(204, 204, 204));
        btn_customer_order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Home.this.mouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEnter(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseExit(evt);
            }
        });

        lbl_customer_order.setBackground(new java.awt.Color(102, 102, 102));
        lbl_customer_order.setFont(new java.awt.Font("NK57 Monospace Rg", 1, 18)); // NOI18N
        lbl_customer_order.setText("Customer Orders");

        javax.swing.GroupLayout btn_customer_orderLayout = new javax.swing.GroupLayout(btn_customer_order);
        btn_customer_order.setLayout(btn_customer_orderLayout);
        btn_customer_orderLayout.setHorizontalGroup(
            btn_customer_orderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_customer_orderLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lbl_customer_order, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        btn_customer_orderLayout.setVerticalGroup(
            btn_customer_orderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btn_customer_orderLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(lbl_customer_order, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addContainerGap())
        );

        btn_report.setBackground(new java.awt.Color(204, 204, 204));
        btn_report.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Home.this.mouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEnter(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseExit(evt);
            }
        });

        lbl_customer_order2.setBackground(new java.awt.Color(102, 102, 102));
        lbl_customer_order2.setFont(new java.awt.Font("NK57 Monospace Rg", 1, 18)); // NOI18N
        lbl_customer_order2.setText("Reports");

        javax.swing.GroupLayout btn_reportLayout = new javax.swing.GroupLayout(btn_report);
        btn_report.setLayout(btn_reportLayout);
        btn_reportLayout.setHorizontalGroup(
            btn_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btn_reportLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_customer_order2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        btn_reportLayout.setVerticalGroup(
            btn_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_reportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_customer_order2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Home_Btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Home.this.mouseClicked(evt);
            }
        });

        Lbl_Home_Name.setBackground(new java.awt.Color(102, 102, 102));
        Lbl_Home_Name.setFont(new java.awt.Font("NK57 Monospace Rg", 1, 18)); // NOI18N
        Lbl_Home_Name.setText("Home");

        javax.swing.GroupLayout Home_BtnLayout = new javax.swing.GroupLayout(Home_Btn);
        Home_Btn.setLayout(Home_BtnLayout);
        Home_BtnLayout.setHorizontalGroup(
            Home_BtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Home_BtnLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(Lbl_Home_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Home_BtnLayout.setVerticalGroup(
            Home_BtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Lbl_Home_Name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout Side_panelLayout = new javax.swing.GroupLayout(Side_panel);
        Side_panel.setLayout(Side_panelLayout);
        Side_panelLayout.setHorizontalGroup(
            Side_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn_add_menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_add_items, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_customer_order, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_create_menu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_report, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Home_Btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Side_panelLayout.setVerticalGroup(
            Side_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Side_panelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(btn_add_menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_add_items, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_create_menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_customer_order, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_report, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190)
                .addComponent(Home_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jPanel1.add(Side_panel, java.awt.BorderLayout.LINE_START);

        Center_Panel.setLayout(new java.awt.CardLayout());

        Add_menu.setBackground(new java.awt.Color(204, 204, 204));

        Add_Menu_Lable.setFont(new java.awt.Font("NK57 Monospace Rg", 1, 18)); // NOI18N
        Add_Menu_Lable.setText("Add Menu ");

        jLabel4.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel4.setText("Menu Name");

        MenuName.setText("Enter Menu Name");

        Discount.setText("Enter Discount");

        jLabel6.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel6.setText("Discount");

        MenuCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        MenuCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuComboActionPerformed(evt);
            }
        });

        Add_Menu_Lable1.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        Add_Menu_Lable1.setText("All Menu Items");

        jLabel8.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel8.setText("Select A Menu");

        jLabel9.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel9.setText("Select A Item");

        ItemCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Add");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddMenuandItem(evt);
            }
        });

        MenuintoItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Item", "Menu"
            }
        ));
        jScrollPane2.setViewportView(MenuintoItemTable);

        MenuItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Menu ID", "Menu Name", "Discount"
            }
        ));
        MenuItemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuItemTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(MenuItemTable);

        UpdateMenu.setText("Update");
        UpdateMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateClick(evt);
            }
        });

        jButton3.setText("Add Menu");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddMenus(evt);
            }
        });

        Add_Menu_Lable2.setFont(new java.awt.Font("NK57 Monospace Rg", 1, 18)); // NOI18N
        Add_Menu_Lable2.setText("Add Food Items to the Menus");

        MenuDelete.setBackground(new java.awt.Color(255, 51, 51));
        MenuDelete.setForeground(new java.awt.Color(255, 255, 255));
        MenuDelete.setText("Delete");
        MenuDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuDeleteMouseClicked(evt);
            }
        });

        SearchMenu.setText("Search");
        SearchMenu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchMenuKeyReleased(evt);
            }
        });

        SearchMenuAndItem.setText("Search Items and Menus");
        SearchMenuAndItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchMenuAndItemKeyReleased(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel20.setText("Search Items and Menus");

        javax.swing.GroupLayout Add_menuLayout = new javax.swing.GroupLayout(Add_menu);
        Add_menu.setLayout(Add_menuLayout);
        Add_menuLayout.setHorizontalGroup(
            Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(Add_menuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Add_menuLayout.createSequentialGroup()
                        .addGroup(Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(MenuName, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Discount, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addGroup(Add_menuLayout.createSequentialGroup()
                                .addComponent(Add_Menu_Lable)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TMP_ID_HOLDER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Add_menuLayout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addGroup(Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(UpdateMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3)
                                    .addComponent(MenuDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(44, 44, 44)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Add_menuLayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Add_menuLayout.createSequentialGroup()
                                        .addGroup(Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(MenuCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                                        .addGroup(Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(Add_menuLayout.createSequentialGroup()
                                                .addComponent(ItemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(27, 27, 27)
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)))
                            .addGroup(Add_menuLayout.createSequentialGroup()
                                .addGap(176, 176, 176)
                                .addComponent(Add_Menu_Lable2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Add_menuLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SearchMenuAndItem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Add_menuLayout.createSequentialGroup()
                        .addComponent(Add_Menu_Lable1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SearchMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        Add_menuLayout.setVerticalGroup(
            Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_menuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Add_menuLayout.createSequentialGroup()
                        .addGroup(Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Add_Menu_Lable)
                            .addComponent(TMP_ID_HOLDER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MenuName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButton3)
                        .addGap(42, 42, 42)
                        .addComponent(UpdateMenu)
                        .addGap(46, 46, 46)
                        .addComponent(MenuDelete)
                        .addGap(17, 17, 17))
                    .addComponent(jSeparator2)
                    .addGroup(Add_menuLayout.createSequentialGroup()
                        .addComponent(Add_Menu_Lable2)
                        .addGap(17, 17, 17)
                        .addGroup(Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MenuCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ItemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchMenuAndItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Add_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Add_Menu_Lable1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
        );

        Center_Panel.add(Add_menu, "card2");

        SimpleOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order Id", "User Name", "Room Number", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SimpleOrderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SimpleOrderTableMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(SimpleOrderTable);

        jLabel14.setFont(new java.awt.Font("NK57 Monospace Rg", 0, 14)); // NOI18N
        jLabel14.setText("Select Report type :");

        jLabel15.setFont(new java.awt.Font("NK57 Monospace Rg", 0, 14)); // NOI18N
        jLabel15.setText("Orders");

        jLabel21.setFont(new java.awt.Font("NK57 Monospace Rg", 1, 18)); // NOI18N
        jLabel21.setText("Inventory Item Consumption Reports");

        jLabel22.setFont(new java.awt.Font("NK57 Monospace Rg", 1, 18)); // NOI18N
        jLabel22.setText("User Order Reports");

        UserReports.add(SingleReportRadio);
        SingleReportRadio.setFont(new java.awt.Font("NK57 Monospace Rg", 0, 14)); // NOI18N
        SingleReportRadio.setText("Single Reports");
        SingleReportRadio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SingleReportRadioMouseClicked(evt);
            }
        });

        UserReports.add(MonthlyReportRadio);
        MonthlyReportRadio.setFont(new java.awt.Font("NK57 Monospace Rg", 0, 14)); // NOI18N
        MonthlyReportRadio.setText("Monthly Reports");
        MonthlyReportRadio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MonthlyReportRadioMouseClicked(evt);
            }
        });

        GeranerateReport.setFont(new java.awt.Font("NK57 Monospace Rg", 1, 24)); // NOI18N
        GeranerateReport.setText("Genarate");
        GeranerateReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GeranerateReportMouseClicked(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("NK57 Monospace Rg", 0, 14)); // NOI18N
        jLabel23.setText("Order Id :");

        jLabel24.setFont(new java.awt.Font("NK57 Monospace Rg", 0, 14)); // NOI18N
        jLabel24.setText("Month :");

        jLabel25.setFont(new java.awt.Font("NK57 Monospace Rg", 0, 14)); // NOI18N
        jLabel25.setText("Order Id :");

        jButton4.setFont(new java.awt.Font("NK57 Monospace Rg", 1, 24)); // NOI18N
        jButton4.setText("Genarate");

        jTextField5.setText("Search Orders");

        jLabel26.setFont(new java.awt.Font("NK57 Monospace Rg", 0, 14)); // NOI18N
        jLabel26.setText("Year :");

        YearDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "2020", "2021", "2022", "2023" }));

        MonthDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        javax.swing.GroupLayout Genarate_reportLayout = new javax.swing.GroupLayout(Genarate_report);
        Genarate_report.setLayout(Genarate_reportLayout);
        Genarate_reportLayout.setHorizontalGroup(
            Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Genarate_reportLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Genarate_reportLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Genarate_reportLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Genarate_reportLayout.createSequentialGroup()
                                .addGroup(Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SingleReportRadio)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(MonthlyReportRadio))
                            .addComponent(GeranerateReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(Genarate_reportLayout.createSequentialGroup()
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TMP_SIMPLE_ID_HOLDER, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Genarate_reportLayout.createSequentialGroup()
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(MonthDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Genarate_reportLayout.createSequentialGroup()
                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(YearDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(228, 228, 228))
                    .addGroup(Genarate_reportLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(Genarate_reportLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(Genarate_reportLayout.createSequentialGroup()
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Genarate_reportLayout.setVerticalGroup(
            Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Genarate_reportLayout.createSequentialGroup()
                .addGroup(Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Genarate_reportLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane10))
                    .addGroup(Genarate_reportLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator8))
                    .addGroup(Genarate_reportLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addGroup(Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MonthlyReportRadio)
                            .addComponent(SingleReportRadio))
                        .addGap(37, 37, 37)
                        .addGroup(Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(TMP_SIMPLE_ID_HOLDER, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(MonthDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(YearDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addComponent(GeranerateReport, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jLabel21)
                        .addGap(34, 34, 34)
                        .addGroup(Genarate_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        Center_Panel.add(Genarate_report, "card6");

        FoodItemName.setText("Enter Food Item ");

        Add_Menu_Lable3.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        Add_Menu_Lable3.setText("Add Food Item ");

        jLabel10.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel10.setText("Name of the Food Item");

        AddFoodItem.setText("Add Item");
        AddFoodItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddFoodItemMouseClicked(evt);
            }
        });
        AddFoodItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddFoodItemActionPerformed(evt);
            }
        });

        FoodItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Food Item ID", "Food Item Name", "Dood Item Price"
            }
        ));
        FoodItemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FoodItemTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(FoodItemTable);

        jLabel11.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel11.setText("Food Items ");

        ItemDelete.setBackground(new java.awt.Color(255, 51, 51));
        ItemDelete.setForeground(new java.awt.Color(255, 255, 255));
        ItemDelete.setText("Delete");
        ItemDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemDeleteMouseClicked(evt);
            }
        });

        FoodItemPrice.setText("Enter the Price");

        SearchItems.setText("Search");
        SearchItems.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchItemsKeyReleased(evt);
            }
        });

        ItemUpdate.setText("Update");
        ItemUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemUpdateMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout Add_itemLayout = new javax.swing.GroupLayout(Add_item);
        Add_item.setLayout(Add_itemLayout);
        Add_itemLayout.setHorizontalGroup(
            Add_itemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_itemLayout.createSequentialGroup()
                .addGroup(Add_itemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Add_itemLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Add_Menu_Lable3))
                    .addGroup(Add_itemLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addGroup(Add_itemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TMP_ID_HOLDER_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FoodItemName)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                            .addComponent(FoodItemPrice)
                            .addComponent(AddFoodItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ItemDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ItemUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(91, 91, 91)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Add_itemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Add_itemLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                        .addComponent(SearchItems, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Add_itemLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 21, Short.MAX_VALUE)))
                .addContainerGap())
        );
        Add_itemLayout.setVerticalGroup(
            Add_itemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_itemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Add_itemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addGroup(Add_itemLayout.createSequentialGroup()
                        .addGroup(Add_itemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Add_itemLayout.createSequentialGroup()
                                .addGap(196, 196, 196)
                                .addComponent(TMP_ID_HOLDER_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(FoodItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FoodItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AddFoodItem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ItemUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ItemDelete))
                            .addGroup(Add_itemLayout.createSequentialGroup()
                                .addGroup(Add_itemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(SearchItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Add_Menu_Lable3))
                        .addGap(0, 11, Short.MAX_VALUE)))
                .addContainerGap())
        );

        Center_Panel.add(Add_item, "card3");

        IngredName.setText("Enter Ingredient");

        AddIngred.setText("Add");
        AddIngred.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddIngredMouseClicked(evt);
            }
        });

        UpdateIngred.setText("Update");
        UpdateIngred.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdateIngredMouseClicked(evt);
            }
        });

        Add_Menu_Lable4.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        Add_Menu_Lable4.setText("Add Ingredients to Menus ");

        Add_Menu_Lable5.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        Add_Menu_Lable5.setText("Add Ingredients ");

        ItemIngredTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item Name", "Ingredirent Name", "Amount"
            }
        ));
        ItemIngredTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemIngredTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(ItemIngredTable);

        Add_Menu_Lable6.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        Add_Menu_Lable6.setText("Add Ingredients to Items");

        ItemComboInIgred.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel12.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel12.setText("Food Item ");

        jLabel13.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel13.setText("Ingredient ");

        IngredAmount.setText("Enter the Amount");

        IngredCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        IngredAmountLbl.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        IngredAmountLbl.setText("Amount (g)");

        AddItemIngred.setText("Add");
        AddItemIngred.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddItemIngredMouseClicked(evt);
            }
        });

        DeleteIngred.setBackground(new java.awt.Color(255, 51, 51));
        DeleteIngred.setForeground(new java.awt.Color(255, 255, 255));
        DeleteIngred.setText("Delete");
        DeleteIngred.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteIngredMouseClicked(evt);
            }
        });

        IngredItemDelete.setBackground(new java.awt.Color(255, 51, 51));
        IngredItemDelete.setForeground(new java.awt.Color(255, 255, 255));
        IngredItemDelete.setText("Delete");
        IngredItemDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IngredItemDeleteMouseClicked(evt);
            }
        });

        IngredItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ));
        IngredItemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IngredItemTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(IngredItemTable);

        Add_Menu_Lable8.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        Add_Menu_Lable8.setText("All Ingredients");

        SearchIngred.setText("Search");
        SearchIngred.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchIngredKeyReleased(evt);
            }
        });

        jTextField3.setText("Search");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Create_menuLayout = new javax.swing.GroupLayout(Create_menu);
        Create_menu.setLayout(Create_menuLayout);
        Create_menuLayout.setHorizontalGroup(
            Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Create_menuLayout.createSequentialGroup()
                .addGroup(Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Create_menuLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Create_menuLayout.createSequentialGroup()
                                .addGroup(Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Create_menuLayout.createSequentialGroup()
                                        .addGap(58, 58, 58)
                                        .addGroup(Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(IngredName, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(Create_menuLayout.createSequentialGroup()
                                                .addComponent(AddIngred, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(UpdateIngred, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(10, 10, 10)
                                                .addComponent(DeleteIngred, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(Create_menuLayout.createSequentialGroup()
                                        .addGap(118, 118, 118)
                                        .addComponent(Add_Menu_Lable5))
                                    .addComponent(TMP_ID_HOLDER_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(102, 102, 102)
                                .addGroup(Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(Create_menuLayout.createSequentialGroup()
                                        .addComponent(Add_Menu_Lable8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(SearchIngred, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jSeparator4)
                            .addGroup(Create_menuLayout.createSequentialGroup()
                                .addGroup(Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Create_menuLayout.createSequentialGroup()
                                        .addGroup(Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ItemComboInIgred, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(IngredAmount)
                                            .addComponent(IngredCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(IngredAmountLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(Create_menuLayout.createSequentialGroup()
                                                .addComponent(Add_Menu_Lable6)
                                                .addGap(0, 322, Short.MAX_VALUE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Create_menuLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(TMP_ID_HOLDER_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(69, 69, 69))
                                    .addGroup(Create_menuLayout.createSequentialGroup()
                                        .addGap(200, 200, 200)
                                        .addComponent(AddItemIngred, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(107, 107, 107)
                                .addGroup(Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(Create_menuLayout.createSequentialGroup()
                                        .addComponent(Add_Menu_Lable4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField3))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Create_menuLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(IngredItemDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        Create_menuLayout.setVerticalGroup(
            Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Create_menuLayout.createSequentialGroup()
                .addGroup(Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Create_menuLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(TMP_ID_HOLDER_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(Add_Menu_Lable5)
                        .addGap(18, 18, 18)
                        .addComponent(IngredName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UpdateIngred)
                            .addComponent(AddIngred)
                            .addComponent(DeleteIngred))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Create_menuLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Add_Menu_Lable8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(Create_menuLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(SearchIngred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(Create_menuLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Create_menuLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Create_menuLayout.createSequentialGroup()
                        .addComponent(Add_Menu_Lable6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addGap(9, 9, 9)
                        .addComponent(ItemComboInIgred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IngredCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(IngredAmountLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(IngredAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(AddItemIngred)
                        .addGap(1, 1, 1)
                        .addComponent(TMP_ID_HOLDER_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Create_menuLayout.createSequentialGroup()
                        .addGroup(Create_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Add_Menu_Lable4)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addComponent(IngredItemDelete)
                .addContainerGap())
        );

        Center_Panel.add(Create_menu, "card4");

        OrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Request ID", "Menu Name", "Quantity", "Status", "Description ", "Date", "Employee ID", "Room Number", "User ID"
            }
        ));
        OrderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrderTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(OrderTable);

        Add_Menu_Lable9.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        Add_Menu_Lable9.setText("Customer Food Requests");

        Add_Menu_Lable10.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        Add_Menu_Lable10.setText("Accept Orders");

        jLabel16.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel16.setText("Reqeust ID ");

        requestId_HOLDER.setText("ID");

        jLabel17.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel17.setText("Employee ID");

        EmployeeName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        AddItemTotheList.setText("Add ->");
        AddItemTotheList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddItemTotheListMouseClicked(evt);
            }
        });

        SubmitOrderItems.setText("Submit");
        SubmitOrderItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SubmitOrderItemsMouseClicked(evt);
            }
        });

        jScrollPane8.setViewportView(AllFoodItemList);

        MenuComboinOrder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel18.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel18.setText("Menu");

        jScrollPane9.setViewportView(SelectedFoodItemList);

        MenuItemLoad.setText("Load");
        MenuItemLoad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuItemLoadMouseClicked(evt);
            }
        });

        RemoveItems.setBackground(new java.awt.Color(255, 51, 51));
        RemoveItems.setForeground(new java.awt.Color(255, 255, 255));
        RemoveItems.setText("Remove");
        RemoveItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RemoveItemsMouseClicked(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel19.setText("Selected Items ");

        OrderTableSearch.setText("Search");
        OrderTableSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                OrderTableSearchKeyReleased(evt);
            }
        });

        PlaceOrder.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        PlaceOrder.setText("Place Order");
        PlaceOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PlaceOrderMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout Customer_OrderLayout = new javax.swing.GroupLayout(Customer_Order);
        Customer_Order.setLayout(Customer_OrderLayout);
        Customer_OrderLayout.setHorizontalGroup(
            Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Customer_OrderLayout.createSequentialGroup()
                .addGroup(Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Customer_OrderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator7))
                    .addGroup(Customer_OrderLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Customer_OrderLayout.createSequentialGroup()
                                .addComponent(Add_Menu_Lable9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(OrderTableSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 1107, Short.MAX_VALUE)))
                    .addGroup(Customer_OrderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Add_Menu_Lable10)
                            .addComponent(jLabel16)
                            .addGroup(Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(requestId_HOLDER, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17))
                                .addComponent(EmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Customer_OrderLayout.createSequentialGroup()
                                .addGroup(Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Customer_OrderLayout.createSequentialGroup()
                                        .addComponent(MenuComboinOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(MenuItemLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(RemoveItems, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(AddItemTotheList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(SubmitOrderItems, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(26, 26, 26)
                                .addGroup(Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Customer_OrderLayout.createSequentialGroup()
                                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                                        .addGap(212, 212, 212))
                                    .addGroup(Customer_OrderLayout.createSequentialGroup()
                                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(PlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(Customer_OrderLayout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        Customer_OrderLayout.setVerticalGroup(
            Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Customer_OrderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Add_Menu_Lable9)
                    .addComponent(OrderTableSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Customer_OrderLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Add_Menu_Lable10)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(MenuComboinOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MenuItemLoad))
                        .addGap(90, 90, 90)
                        .addComponent(AddItemTotheList)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveItems)
                        .addGap(35, 35, 35)
                        .addComponent(SubmitOrderItems)
                        .addGap(0, 93, Short.MAX_VALUE))
                    .addGroup(Customer_OrderLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8)
                            .addComponent(jScrollPane9)
                            .addGroup(Customer_OrderLayout.createSequentialGroup()
                                .addGroup(Customer_OrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Customer_OrderLayout.createSequentialGroup()
                                        .addComponent(requestId_HOLDER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(EmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(PlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );

        Center_Panel.add(Customer_Order, "card5");

        jPanel1.add(Center_Panel, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseClicked
        // TODO add your handling code here:
        //UI Related Code 
        if(evt.getSource() == btn_add_menu)
        {
            btn_add_menu.setBackground(new Color(51,204,51));
        }
        if(evt.getSource() == btn_add_items)
        {
            btn_add_items.setBackground(new Color(51,204,51));
        }
        if(evt.getSource() == btn_create_menu)
        {
            btn_create_menu.setBackground(new Color(51,204,51));
        }
        if(evt.getSource() == btn_customer_order)
        {
            btn_customer_order.setBackground(new Color(51,204,51));
        }
        if(evt.getSource() == btn_report)
        {
            btn_report.setBackground(new Color(51,204,51));
        }
        
        //Panel Selecting Command
        if(evt.getSource() == btn_add_menu)
        {
            Add_menu.setVisible(true);
            Add_item.setVisible(false);
            Create_menu.setVisible(false);
            Customer_Order.setVisible(false);
            Genarate_report.setVisible(false);
        }
         if(evt.getSource() == btn_add_items)
        {
            Add_menu.setVisible(false);
            Add_item.setVisible(true);
            Create_menu.setVisible(false);
            Customer_Order.setVisible(false);
        }
          if(evt.getSource() == btn_create_menu)
        {
            Add_menu.setVisible(false);
            Add_item.setVisible(false);
            Create_menu.setVisible(true);
            Customer_Order.setVisible(false);
            Genarate_report.setVisible(false);
        }
           if(evt.getSource() == btn_customer_order)
        {
            Add_menu.setVisible(false);
            Add_item.setVisible(false);
            Create_menu.setVisible(false);
            Customer_Order.setVisible(true);
            Genarate_report.setVisible(false);
        }
             if(evt.getSource() == btn_report)
        {
            Add_menu.setVisible(false);
            Add_item.setVisible(false);
            Create_menu.setVisible(false);
            Customer_Order.setVisible(false);
            Genarate_report.setVisible(true);
        }
             if(evt.getSource() == Home_Btn){
                 MainMenu menu = new MainMenu();
                 this.setVisible(false);
                 menu.setVisible(true);
                 System.out.println("Clicked");
                 
             }
    }//GEN-LAST:event_mouseClicked

    private void mouseEnter(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseEnter
        // TODO add your handling code here:
        //UI Related Code
        if(evt.getSource() == btn_add_menu)
        {
            btn_add_menu.setBackground(new Color(133,224,133));
        }
        if(evt.getSource() == btn_add_items)
        {
            btn_add_items.setBackground(new Color(133,224,133));
        }
        if(evt.getSource() == btn_create_menu)
        {
            btn_create_menu.setBackground(new Color(133,224,133));
        }
        if(evt.getSource() == btn_customer_order)
        {
            btn_customer_order.setBackground(new Color(133,224,133));
        }
         if(evt.getSource() == btn_report)
        {
            btn_report.setBackground(new Color(133,224,133));
        }
    }//GEN-LAST:event_mouseEnter

    private void mouseExit(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseExit
        // TODO add your handling code here:
        //UI Related Code
        if(evt.getSource() == btn_add_menu)
        {
            btn_add_menu.setBackground(new Color(204,204,204));
        }
        if(evt.getSource() == btn_add_items)
        {
            btn_add_items.setBackground(new Color(204,204,204));
        }
        if(evt.getSource() == btn_create_menu)
        {
            btn_create_menu.setBackground(new Color(204,204,204));
        }
        if(evt.getSource() == btn_customer_order)
        {
            btn_customer_order.setBackground(new Color(204,204,204));
        }
          if(evt.getSource() == btn_report)
        {
            btn_report.setBackground(new Color(204,204,204));
        }
    }//GEN-LAST:event_mouseExit

    private void AddMenus(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddMenus
        //Attributes 
        String menu_name;
        int discount;
        //Getting Inputs and Validations
        try{
             menu_name = MenuName.getText();
             discount = Integer.parseInt(Discount.getText());
        } catch (java.lang.NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Price","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Check the existance of the data.
        DBHelper dbhelper = new DBHelper();
        ResultSet rs = dbhelper.SelectMenu();
        try{
            String name;
            while(rs.next()){
            name = rs.getString("menu_name");
                //System.out.println(name);   
            if (menu_name.replaceAll("\\s+","").equalsIgnoreCase(name.replaceAll("\\s+",""))){
                JOptionPane.showMessageDialog(this,"Menu is already exist","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            }
        } catch (SQLException e) {
                
            System.out.println("Error");
        }
        
        
        //System.out.println(menu_name + discount + amount + price); Testing
        //Calling method to insert data for the table.
        DBHelper.addMenu(menu_name,discount);
        fillMenutable(); //To refresh the table
        FillDropDown(); //To refresh the drop down item list.
    }//GEN-LAST:event_AddMenus

    private void AddFoodItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddFoodItemMouseClicked
        //Get data
        String item_name = FoodItemName.getText();
        String item_price = FoodItemPrice.getText();
        //Validation
        if(FoodItemName.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the Item name","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
         if(FoodItemPrice.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the Item price","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
         //Creating formats and exceptions
         double price = 0;
         try{
              price = Double.parseDouble(item_price);
         } catch (NumberFormatException e)
         {
             JOptionPane.showMessageDialog(this, "Please Enter correct number for the price","Error",JOptionPane.ERROR_MESSAGE);
             return;
         }
         
        //Calling the method to insert 
        DBHelper.addItem(item_name,price);
        //Reset the field
        FoodItemName.setText("");
        FoodItemPrice.setText("");
        
        //Refresh tables after deleting the column
        fillItemtable(); //Refreshing the item table
        fillMenuItemtable(); //Refreshing Menu -> Item table
        FillDropDown(); //Refreshing drop down menu
    }//GEN-LAST:event_AddFoodItemMouseClicked

    private void AddIngredMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddIngredMouseClicked
        // TODO add your handling code here:
        String Ingredname = IngredName.getText();
        //Validation 
        if(IngredName.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Please enter the Ingredient name","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        //Validation to see if the item is already exist in the table.
        DBHelper dbhelper = new DBHelper();
        ResultSet rs = dbhelper.SelectIngred();
        try{
            String name;
            while(rs.next()){
            name = rs.getString("ingred_name");
                //System.out.println(name);   
            if (Ingredname.replaceAll("\\s+","").equalsIgnoreCase(name.replaceAll("\\s+",""))){
                JOptionPane.showMessageDialog(this,"Such menu is already exist","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            }
        } catch (SQLException e) {
                
            System.out.println("Error");
        }
        
        //Calling the method to store data in the database
        DBHelper.AddIngred(Ingredname);
        //Resetting the Field
        IngredName.setText("");
        fillIngredtable();
        FillDropDown();
    }//GEN-LAST:event_AddIngredMouseClicked

    private void AddFoodItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddFoodItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddFoodItemActionPerformed

    private void MenuComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuComboActionPerformed

    private void AddMenuandItem(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddMenuandItem
       //Getting data from the interface
       String Menu = MenuCombo.getSelectedItem().toString();
       String Item = ItemCombo.getSelectedItem().toString();
        System.out.println(Menu + Item);
       //Validation 
       if(Menu.equals("")){
            JOptionPane.showMessageDialog(this,"Please select a Menu before adding","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(Item.equals("")){
            JOptionPane.showMessageDialog(this,"Please select a Food Item before adding","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
       //Calling the DB method to add 
       boolean status = DBHelper.AddMenuItem(Menu, Item);
       //Database Operation validaton.
       if(status == true){
           JOptionPane.showMessageDialog(this,"Successfully added to the database","Confirmation",JOptionPane.INFORMATION_MESSAGE);
       } else if (status == false) {
           JOptionPane.showMessageDialog(this,"Something is wrong!","Error",JOptionPane.ERROR_MESSAGE);
       }
       //Update the table soon after adding something.
       fillMenuItemtable();
    }//GEN-LAST:event_AddMenuandItem

    private void updateClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateClick
        
        //Validations
        if(TMP_ID_HOLDER.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Please select an Item!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Getting data from the text fields 
        int id = Integer.parseInt(TMP_ID_HOLDER.getText());
        String new_name = MenuName.getText();
        int price = Integer.parseInt(Discount.getText());
        System.out.println(id);
        
        //Validating whether the name exists
        DBHelper dbhelper = new DBHelper();
        ResultSet rs = dbhelper.SelectMenu();
        try{
            String name;
            while(rs.next()){
            name = rs.getString("menu_name");
                //System.out.println(name);   
            if (new_name.replaceAll("\\s+","").equalsIgnoreCase(name.replaceAll("\\s+",""))){
                JOptionPane.showMessageDialog(this,"Such menu is already exist","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            }
        } catch (SQLException e) {
                
            System.out.println("Error");
        }
        
        //Calling the update method from the DBHelper
        boolean status = DBHelper.UpdateMenuItem(id,new_name,price);
        if (status == true){
           JOptionPane.showMessageDialog(this,"Item Updated successfully","Massage",JOptionPane.INFORMATION_MESSAGE); 
        } else {
            JOptionPane.showMessageDialog(this,"Something is wrong with update!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        fillMenutable(); //To refresh the table
        FillDropDown(); //To refresh the drop down item list.
        fillMenuItemtable(); //To refresh the Menu -> Item table.
    }//GEN-LAST:event_updateClick

    //Getting data from the table to the text fields
    private void MenuItemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuItemTableMouseClicked
        
        DefaultTableModel tableModel = (DefaultTableModel) MenuItemTable.getModel(); 
        
        //Getting and process information from the table
        String id_string = tableModel.getValueAt(MenuItemTable.getSelectedRow(),0).toString();
        String menu_name = tableModel.getValueAt(MenuItemTable.getSelectedRow(),1).toString();
        String price_string = tableModel.getValueAt(MenuItemTable.getSelectedRow(),2).toString();
        
        //Set information to the text fields
        TMP_ID_HOLDER.setText(id_string);
        MenuName.setText(menu_name);
        Discount.setText(price_string);
    }//GEN-LAST:event_MenuItemTableMouseClicked

    
    
    //Delete function to the menu 
    private void MenuDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuDeleteMouseClicked
        // TODO add your handling code here:
        if(TMP_ID_HOLDER.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Select an Item to delete!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        //since it comes from the database - Ignored try-catch
        int number = Integer.parseInt(TMP_ID_HOLDER.getText());
        
        //Calling the method to delete.
        boolean status = DBHelper.deleteMenu(number);
        
        //Acknoladgement to the user
        if (status == true){
            JOptionPane.showMessageDialog(this,"Item deleted successfully!","Messege",JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this,"Item not deleted!","Error",JOptionPane.ERROR_MESSAGE);
        }
        
        //Clean the Menu->Item Table - Calling the method. - Not working on the SQL safe mode.
        boolean dev_status = DBHelper.CleanMenuItem(0, number);
        
        if(dev_status == true){
            System.out.println("Cleaned");
        } else {
            System.out.println("Error in Cleaning");
        }
        
        fillMenutable(); //To refresh the table
        FillDropDown(); //To refresh the drop down item list.
        fillMenuItemtable();
        //Create another method to clean the Menu-> Item table.
    }//GEN-LAST:event_MenuDeleteMouseClicked

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    //Method to search the Menu Table.
    private void SearchMenuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchMenuKeyReleased
        DefaultTableModel table = (DefaultTableModel)MenuItemTable.getModel();
        String search = SearchMenu.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        MenuItemTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_SearchMenuKeyReleased
    
    //Method to search the Item table.
    private void SearchItemsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchItemsKeyReleased
        DefaultTableModel table = (DefaultTableModel)FoodItemTable.getModel();
        String search = SearchItems.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        FoodItemTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_SearchItemsKeyReleased

    //Food Item Table Mouse click
    private void FoodItemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FoodItemTableMouseClicked
        //Creating a table model
        DefaultTableModel table = (DefaultTableModel)FoodItemTable.getModel();
        
        //populate the text fields - getting values from the table 
        String number = table.getValueAt(FoodItemTable.getSelectedRow(), 0).toString();
        String Food_name = table.getValueAt(FoodItemTable.getSelectedRow(), 1).toString();
        String Price = table.getValueAt(FoodItemTable.getSelectedRow(), 2).toString();
        
        //Assigning the values to the text fields 
        TMP_ID_HOLDER_2.setText(number);
        FoodItemName.setText(Food_name);
        FoodItemPrice.setText(Price);
        
    }//GEN-LAST:event_FoodItemTableMouseClicked

    //Food Item Update function
    private void ItemUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemUpdateMouseClicked
        
        //Validation 
        if(TMP_ID_HOLDER_2.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Select an Item first","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Validating the text inputs 
        if(FoodItemName.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Incorrect Item Name","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(FoodItemPrice.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Add a price to the Item","Error",JOptionPane.ERROR_MESSAGE);
            return;
        } 
        Double price;
        //Price type validation 
        try {
            price = Double.parseDouble(FoodItemPrice.getText().toString());
        } catch (java.lang.NumberFormatException e) {
            JOptionPane.showMessageDialog(this,"Incorrect Price!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String new_name = FoodItemName.getText();
        
        
        //Check if the same item is there already
                DBHelper dbhelper = new DBHelper();
        ResultSet rs = dbhelper.SelectItem();
        try{
            String name;
            while(rs.next()){
            name = rs.getString("item_name");
                //System.out.println(name);   
            if (new_name.replaceAll("\\s+","").equalsIgnoreCase(name.replaceAll("\\s+",""))){
                JOptionPane.showMessageDialog(this,"Such menu is already exist","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            }
        } catch (SQLException e) {
                
            System.out.println("Error");
        }
        
        //Calling the update method.
        String number = TMP_ID_HOLDER_2.getText();
        int id = Integer.parseInt(number);
        boolean status = DBHelper.updateItem(id, new_name, price);
        
        //Confirmation
        if(status == true){
             JOptionPane.showMessageDialog(this,"Item Updated Successfully","Message",JOptionPane.INFORMATION_MESSAGE);   
        }
        
        //Refresh tables after deleting the column
        fillItemtable(); //Refreshing the item table
        fillMenuItemtable(); //Refreshing Menu -> Item table
        FillDropDown(); //Refreshing drop down menu
    }//GEN-LAST:event_ItemUpdateMouseClicked

    private void ItemDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemDeleteMouseClicked
        
        //Validation 
        if(TMP_ID_HOLDER_2.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Select an Item first","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Getting the id and passing to the delete query.
        String id = TMP_ID_HOLDER_2.getText();
        
        //Calling the function.
        boolean status = DBHelper.DeleteItem(Integer.parseInt(id));
        
        //Confirmation
        if(status == true) {
            JOptionPane.showMessageDialog(this,"Item successfully deleted","Message",JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this,"Error deleting the item","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Clean the Menu->Item Table - Calling the method. - Not working on the SQL safe mode.
        boolean dev_status = DBHelper.CleanMenuItem(1, Integer.parseInt(id));
        
        if(dev_status == true){
            System.out.println("Cleaned");
        } else {
            System.out.println("Error in Cleaning");
        }
        
        //Refresh tables after deleting the column
        fillItemtable(); //Refreshing the item table
        fillMenuItemtable(); //Refreshing Menu -> Item table
        FillDropDown(); //Refreshing drop down menu
    }//GEN-LAST:event_ItemDeleteMouseClicked

    private void SearchMenuAndItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchMenuAndItemKeyReleased
        DefaultTableModel table = (DefaultTableModel)MenuintoItemTable.getModel();
        String search = SearchMenuAndItem.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        MenuintoItemTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_SearchMenuAndItemKeyReleased

    private void SearchIngredKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchIngredKeyReleased
        DefaultTableModel table = (DefaultTableModel)IngredItemTable.getModel();
        String search = SearchIngred.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        IngredItemTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_SearchIngredKeyReleased
    
    //Search Ingred using the search bar
    private void IngredItemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IngredItemTableMouseClicked
        //Creating a table model 
        DefaultTableModel  table = (DefaultTableModel)IngredItemTable.getModel();
        
        //Populate the text fields 
        String ingred_id = table.getValueAt(IngredItemTable.getSelectedRow(), 0).toString();
        String ingred_name = table.getValueAt(IngredItemTable.getSelectedRow(),1).toString();
        
        //Assign the values to the textFields
        TMP_ID_HOLDER_3.setText(ingred_id);
        IngredName.setText(ingred_name);
    }//GEN-LAST:event_IngredItemTableMouseClicked

    //Update Ingred details
    private void UpdateIngredMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdateIngredMouseClicked
        
        //Validation
        //Validation 
        if(TMP_ID_HOLDER_3.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Select an Item first","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Validation text inputs on update
        if(IngredName.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Incorrect Item Name","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Getting the new Text inputs
        int number = Integer.parseInt(TMP_ID_HOLDER_3.getText());
        String new_ingred_name = IngredName.getText();
        
        //Check if the same item is there already
        DBHelper dbhelper = new DBHelper();
        ResultSet rs = dbhelper.SelectIngred();
        try{
            String name;
            while(rs.next()){
            name = rs.getString("ingred_name");
                //System.out.println(name);   
            if (new_ingred_name.replaceAll("\\s+","").equalsIgnoreCase(name.replaceAll("\\s+",""))){
                JOptionPane.showMessageDialog(this,"Such menu is already exist","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            }
        } catch (SQLException e) {
                
            System.out.println("Error");
        }
        
        //Calling  the update method from the DBHelper class
        boolean status = DBHelper.UpdateIngred(new_ingred_name, number);
        
        //Confirmation 
        if(status == true){
            JOptionPane.showMessageDialog(this,"Ingread item update successfully","Message",JOptionPane.INFORMATION_MESSAGE);   
        } else {
            JOptionPane.showMessageDialog(this,"Error updating the ingred item!","Error",JOptionPane.ERROR_MESSAGE); 
        }
        
        //refresh the dependent tables
        fillIngredtable();
        FillDropDown();
        fillItemIngred();
    }//GEN-LAST:event_UpdateIngredMouseClicked

    private void DeleteIngredMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteIngredMouseClicked
        //Validation 
        if(TMP_ID_HOLDER_3.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Select an Item first","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Getting the values from the textField
        int number = Integer.parseInt(TMP_ID_HOLDER_3.getText());
        
        //Calling the deleteMethod in DBHelper
        boolean status = DBHelper.DeleteIngred(number);
        
        //Confirmation 
        if(status == true){
            JOptionPane.showMessageDialog(this,"Ingread item deleted successfully","Message",JOptionPane.INFORMATION_MESSAGE);   
        } else {
            JOptionPane.showMessageDialog(this,"Error deleting the ingred item!","Error",JOptionPane.ERROR_MESSAGE); 
        }
        
        //Refresh tables
        fillIngredtable();
        FillDropDown();
        fillItemIngred();
    }//GEN-LAST:event_DeleteIngredMouseClicked

    private void AddItemIngredMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddItemIngredMouseClicked
        
        //Variables
        String Ingred_name;
        String Item_name;
        double amount;
        
        //Get data from the UI + validation
        try{
            Ingred_name = IngredCombo.getSelectedItem().toString();  //ItemComboInIgred  IngredCombo
            Item_name = ItemComboInIgred.getSelectedItem().toString();  
            amount = Double.parseDouble(IngredAmount.getText());
        } catch (java.lang.NumberFormatException e) {
            JOptionPane.showMessageDialog(this,"Entered amount is Invalid","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Call the method to enter the data
        //System.out.println(Ingred_name  + " - " + Item_name);
        boolean status = DBHelper.AddItemIngred(Item_name, Ingred_name, amount);
        
        //Confirmation 
        if (status == true){
            JOptionPane.showMessageDialog(this,"Ingred Added to the Item","Message",JOptionPane.INFORMATION_MESSAGE);
        } else if (status == false){
            JOptionPane.showMessageDialog(this,"Error Adding Ingred Items!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //refresh the Ingred -> Item Table.
        fillItemIngred();
        
        
    }//GEN-LAST:event_AddItemIngredMouseClicked

    private void ItemIngredTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemIngredTableMouseClicked
        
        //Creating a table object to access table data
        DefaultTableModel tableModel = (DefaultTableModel) ItemIngredTable.getModel();
        
        //Getting selected data from the table 
        String id = tableModel.getValueAt(ItemIngredTable.getSelectedRow(),0).toString();
        
       //Set the values to the text field
       TMP_ID_HOLDER_4.setText(id);
       //String id2 = TMP_ID_HOLDER_4.getText(); Testing 
       //System.out.println("Selected Id - " + id2 ); Testing
        
    }//GEN-LAST:event_ItemIngredTableMouseClicked

    private void IngredItemDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IngredItemDeleteMouseClicked
        //Get the id store in the holder
        String id = TMP_ID_HOLDER_4.getText();
        
        //Validating the value
        if(id.equals("")){
            JOptionPane.showMessageDialog(this,"First Select an Item!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Calling the Delete method to delete the item
       boolean status =  DBHelper.deleteItemIngred(Integer.parseInt(id));
       
       //confirmation 
       if(status == true){
           JOptionPane.showMessageDialog(this,"Entry deleted","Message",JOptionPane.INFORMATION_MESSAGE);
       } else {
           JOptionPane.showMessageDialog(this,"Error deleting the entry","Error",JOptionPane.ERROR_MESSAGE);
       }
       
       //refresh the table
       fillItemIngred();
        
    }//GEN-LAST:event_IngredItemDeleteMouseClicked

    private void OrderTableSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OrderTableSearchKeyReleased
        DefaultTableModel table = (DefaultTableModel)OrderTable.getModel();
        String search = OrderTableSearch.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        OrderTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_OrderTableSearchKeyReleased

    private void OrderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderTableMouseClicked
        //Creating a Model from the table (Oreder)
        DefaultTableModel table = (DefaultTableModel)OrderTable.getModel();
        
        //Getting data from the table 
        String id = table.getValueAt(OrderTable.getSelectedRow(), 0).toString();
        //Add other columns when in need 
        
        //Set the id in the text box
        requestId_HOLDER.setText(id);
        
    }//GEN-LAST:event_OrderTableMouseClicked

    private void MenuItemLoadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuItemLoadMouseClicked
        
        //Get the selected value in the drop downlist
        String menu_name = (String) MenuComboinOrder.getSelectedItem();
        
        //Calling the method using the name as the  parameter
        DBHelper dbhelper = new DBHelper();
        DefaultListModel set = dbhelper.MenuItemSelect((menu_name));
        
        //Set the Model to the List
        AllFoodItemList.setModel(set);
    }//GEN-LAST:event_MenuItemLoadMouseClicked

    //Create a List model for the second list - Created outside in order to keep the previous added data.
    DefaultListModel list2 = new DefaultListModel();
    private void AddItemTotheListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddItemTotheListMouseClicked
        
        
        
        //Get the selected value from the list one 
        list2.addElement(AllFoodItemList.getSelectedValue());
        
        //set the new model to the second list
        SelectedFoodItemList.setModel(list2);
    }//GEN-LAST:event_AddItemTotheListMouseClicked

    private void RemoveItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveItemsMouseClicked
       
        //Get selected item from the second list
        list2.removeElement(SelectedFoodItemList.getSelectedValue());
        
        //set the updated model to the list
        SelectedFoodItemList.setModel(list2);
    }//GEN-LAST:event_RemoveItemsMouseClicked

    private void SubmitOrderItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SubmitOrderItemsMouseClicked
        //Variables
        JList<String> string_list;
        int order_number = 0;
        
         //Validation - Check the cart is empty or not.
         if(requestId_HOLDER.getText().equals("ID")){
             JOptionPane.showMessageDialog(this,"Select an order first","Error",JOptionPane.ERROR_MESSAGE);
             return;
         }
         
        try{
            order_number = Integer.parseInt(requestId_HOLDER.getText());
            System.out.println(order_number); //Testing
        } catch (java.lang.NumberFormatException e){
            e.printStackTrace();
        }
        
        //Validation - Check the cart is empty or not.
        boolean status = list2.isEmpty();
         if (status == true){
            JOptionPane.showMessageDialog(this,"Can't is empty","Error",JOptionPane.ERROR_MESSAGE);
        return;
        }

    //Get the list items from the Jlist
    string_list = new JList<>();
    string_list.setModel(list2);
    
    //Calling the method and pass the string list as parameters 
    int count = string_list.getModel().getSize();
    String TMP_VALUE;
    int i;
    for(i=0; i<count; i++){
        //Get the value from the list.
        TMP_VALUE = string_list.getModel().getElementAt(i);

        //Calling the method 
        boolean status1 = DBHelper.enterOrderDetails(order_number, TMP_VALUE);
    }
    
    //Confirmation
        if(i == (count)){
            JOptionPane.showMessageDialog(this,"Completely added items to the order","Message",JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this,"Error adding items to the order","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
    //Change the status of the employee table when assigned to work.
    //Calling the method 
    String employee_id = EmployeeName.getSelectedItem().toString();
    //int emp_no = Integer.parseInt(employee_id);
    //Calling the method to update the values 
    DBHelper dbhelper = new DBHelper();
    
    //Calling DBHelper method 
    boolean emp_status = dbhelper.UpdateEmployeeStatus(employee_id);
    
    //Confirmation 
    if(emp_status = true){
        JOptionPane.showMessageDialog(this,"Employee updation success","Operation",JOptionPane.INFORMATION_MESSAGE);
    } else {
       JOptionPane.showMessageDialog(this,"Employee validation failed","Error",JOptionPane.ERROR_MESSAGE);
    }
    
    //Refresh the Report section 
    fillSimpleOrder();
    
    }//GEN-LAST:event_SubmitOrderItemsMouseClicked

    private void SimpleOrderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SimpleOrderTableMouseClicked
         //Creating a Model from the table (Oreder)
        DefaultTableModel table = (DefaultTableModel)SimpleOrderTable.getModel();
        
        //Getting data from the table 
        String id = table.getValueAt(SimpleOrderTable.getSelectedRow(), 0).toString();
        //Add other columns when in need 
        
        //Set the id in the text box
        TMP_SIMPLE_ID_HOLDER.setText(id);
    }//GEN-LAST:event_SimpleOrderTableMouseClicked

    private void GeranerateReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GeranerateReportMouseClicked
        //Report
        //Select report type condition 
        if(SingleReportRadio.isSelected()){   
        //this method will have all the report genarating codes
            String number = (TMP_SIMPLE_ID_HOLDER.getText());
            if (number.equals("")) {
                JOptionPane.showMessageDialog(this, "Fist select an order", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            try {
                //Calling the method
                DBHelper.genReportUserOrder(Integer.parseInt(number));
            } catch (JRException | java.lang.NumberFormatException e) {
                e.printStackTrace();
            }
        } else if (MonthlyReportRadio.isSelected()) {
            //Getting data from the Drop Downs
            String Month = MonthDropDown.getSelectedItem().toString();
            String Year = YearDropDown.getSelectedItem().toString();
            
            //Validation
            if (Month.equals("-")) {
                JOptionPane.showMessageDialog(this, "Select Month", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (Year.equals("-")) {
                JOptionPane.showMessageDialog(this, "Select Year", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            //Calling the mehtod and passing the parameters
            try{
               DBHelper.genReportMonth(Year, Month);
            } catch (java.lang.NumberFormatException | JRException e){
               e.printStackTrace();
            }
            
        }
        
    }//GEN-LAST:event_GeranerateReportMouseClicked
    public void changeElements(){
        if(SingleReportRadio.isSelected()){
            MonthDropDown.disable();
            YearDropDown.disable();
        } else if (MonthlyReportRadio.isSelected()){
            MonthDropDown.enable();
            YearDropDown.enable();
            TMP_SIMPLE_ID_HOLDER.setText("N/A");
        }
    }
    
    private void SingleReportRadioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SingleReportRadioMouseClicked
        // Change the Elements visibillity and accesiblility
        changeElements();
    }//GEN-LAST:event_SingleReportRadioMouseClicked

    private void MonthlyReportRadioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MonthlyReportRadioMouseClicked
        // Change the Elements visibillity and accesiblility
        changeElements();
    }//GEN-LAST:event_MonthlyReportRadioMouseClicked

    private void PlaceOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PlaceOrderMouseClicked
        //Navigating to the Kitchen service interface.
        KitchenInterface ki = new KitchenInterface();
        this.setVisible(false);
        ki.setVisible(true);
    }//GEN-LAST:event_PlaceOrderMouseClicked

   //-------------------- Drop down populate --------------------
    //Fill Drop down menus in the add menu page
    public void FillDropDown(){
        //Filling the Menu Drop down in the first page
        DBHelper dbhelper = new DBHelper();
        ResultSet rs = dbhelper.SelectMenu();
        //Removing the default vales in the drop downs
        MenuCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        ItemCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        MenuComboinOrder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {} ));
        ItemComboInIgred.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        IngredCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        //Looping through search results
        try {
             String name;
            while(rs.next()){
            name = rs.getString(COL2);
            MenuCombo.addItem(name);
            MenuComboinOrder.addItem(name);
        }
        } catch (SQLException e){
            System.out.println("Something is wrong with a drop down menu - MenuItem Drop Down from the 1st page");
        }
        
        //Setting the Item drop down in the first page
        ResultSet rs2 = dbhelper.SelectItem();
       //Loop
       try{
                String item_name;
                while(rs2.next()){
                item_name = rs2.getString(COL1_2);
                ItemCombo.addItem(item_name);
                ItemComboInIgred.addItem(item_name);
            }
       } catch(SQLException e){
         System.out.println("Something is wrong with a drop down menu - FoodItem Drop Down from the 1st page");
       }
       
       //Setting the Item drop down in the second page for ingred
       ResultSet rs3 = dbhelper.SelectIngred();
       //loop
       try{
                String ingred_name;
                while(rs3.next()){
                    ingred_name = rs3.getString(COL2_3);
                    IngredCombo.addItem(ingred_name);
                }        
       } catch (SQLException e) {
        System.out.println("Something is wrong with a drop down menu - Ingred Item drop down from the 2nd page");       
       }
       //Setting the Item drop down for Available Employees.
       
       ResultSet rs4 = dbhelper.selectEmployee();
        //Setting the Item drop down for Available Employees.
        //loop
       try{
                String Employee_Name;
                while(rs4.next()){
                    Employee_Name = rs4.getString("name");
                    EmployeeName.addItem(Employee_Name);
                }        
       } catch (SQLException e) {
        System.out.println("Something is wrong with a drop down menu - Ingred Item drop down from the 2nd page");  
    }
    }
    
    
    
//-------------------- Table Populating code --------------------
//Creating a Method to fill the Menu item table
    public  void fillMenutable()
    {
        //Creating a Database Helper object
        DBHelper dbhelper = new DBHelper();
        //Calling method 
        ResultSet rs = dbhelper.SelectMenu();
        //set the table view
        MenuItemTable.setModel(DbUtils.resultSetToTableModel(rs));
    }
    
    //Item table filling
    public void fillItemtable(){
        //Creating an Instance from the database class
        DBHelper dbhelper = new DBHelper();
       //call the method 
       ResultSet rs = dbhelper.SelectItem();
       //Set the table  view
       FoodItemTable.setModel(DbUtils.resultSetToTableModel(rs));
    }
    
    //Ingred table filling 
    public void fillIngredtable(){
        //Creating an instance from the DBHelper class
        DBHelper dbhelper = new DBHelper();
        //Calling the method 
        ResultSet rs = dbhelper.SelectIngred();
        //Set table view 
        IngredItemTable.setModel(DbUtils.resultSetToTableModel(rs));
    }
    
    //Populating the menu item table 
    public void fillMenuItemtable(){
        //Creating the instance from the database Helper class 
        DBHelper dbhelper = new DBHelper();
        //Receiving the resultSet
        ResultSet rs = dbhelper.SelectMenuItem();
        //Set table view
        MenuintoItemTable.setModel(DbUtils.resultSetToTableModel (rs)); //There a exception due to new Date format !!!????
    }
    
    //Populating the Item -> Ingred table 
    public void fillItemIngred(){
        //Creating the instance from the database Helper class
        DBHelper dbhelper = new DBHelper();
        //Getting the resultSet from the dbhelper class
        ResultSet rs = dbhelper.selectItemIngred();
        //Set table view 
        ItemIngredTable.setModel(DbUtils.resultSetToTableModel(rs));
    }
    
    //Populate the Order table 
    public void fillOrdertable(){
        //Creating the instance from the database Helper class
        DBHelper dbhelper = new DBHelper();
        //Getting the resultSet from the dbhelper class
        ResultSet rs = dbhelper.selectOrders();
        //Set table view 
        OrderTable.setModel((DbUtils.resultSetToTableModel(rs)));
    }
    
    //Create a method to populate simpleOrder table.
    public void fillSimpleOrder(){
        //Creating the instance from the database Helper class
        DBHelper dbhelper = new DBHelper();
        //Getting the resultSet from the dbhelper class
        ResultSet simpleOrder = dbhelper.selectSimpleOrder();
        //set table view
        SimpleOrderTable.setModel((DbUtils.resultSetToTableModel(simpleOrder)));
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddFoodItem;
    private javax.swing.JButton AddIngred;
    private javax.swing.JButton AddItemIngred;
    private javax.swing.JButton AddItemTotheList;
    private javax.swing.JLabel Add_Menu_Lable;
    private javax.swing.JLabel Add_Menu_Lable1;
    private javax.swing.JLabel Add_Menu_Lable10;
    private javax.swing.JLabel Add_Menu_Lable2;
    private javax.swing.JLabel Add_Menu_Lable3;
    private javax.swing.JLabel Add_Menu_Lable4;
    private javax.swing.JLabel Add_Menu_Lable5;
    private javax.swing.JLabel Add_Menu_Lable6;
    private javax.swing.JLabel Add_Menu_Lable8;
    private javax.swing.JLabel Add_Menu_Lable9;
    private javax.swing.JPanel Add_item;
    private javax.swing.JPanel Add_menu;
    private javax.swing.JList<String> AllFoodItemList;
    private javax.swing.JPanel Center_Panel;
    private javax.swing.JPanel Create_menu;
    private javax.swing.JPanel Customer_Order;
    private javax.swing.JButton DeleteIngred;
    private javax.swing.JTextField Discount;
    private javax.swing.JComboBox<String> EmployeeName;
    private javax.swing.JTextField FoodItemName;
    private javax.swing.JTextField FoodItemPrice;
    private javax.swing.JTable FoodItemTable;
    private javax.swing.JPanel Genarate_report;
    private javax.swing.JButton GeranerateReport;
    private javax.swing.JPanel Home_Btn;
    private javax.swing.JTextField IngredAmount;
    private javax.swing.JLabel IngredAmountLbl;
    private javax.swing.JComboBox<String> IngredCombo;
    private javax.swing.JButton IngredItemDelete;
    private javax.swing.JTable IngredItemTable;
    private javax.swing.JTextField IngredName;
    private javax.swing.JComboBox<String> ItemCombo;
    private javax.swing.JComboBox<String> ItemComboInIgred;
    private javax.swing.JButton ItemDelete;
    private javax.swing.JTable ItemIngredTable;
    private javax.swing.JButton ItemUpdate;
    private javax.swing.JLabel Lbl_Home_Name;
    private javax.swing.JComboBox<String> MenuCombo;
    private javax.swing.JComboBox<String> MenuComboinOrder;
    private javax.swing.JButton MenuDelete;
    private javax.swing.JButton MenuItemLoad;
    private javax.swing.JTable MenuItemTable;
    private javax.swing.JTextField MenuName;
    private javax.swing.JTable MenuintoItemTable;
    private javax.swing.JComboBox<String> MonthDropDown;
    private javax.swing.JRadioButton MonthlyReportRadio;
    private javax.swing.JTable OrderTable;
    private javax.swing.JTextField OrderTableSearch;
    private javax.swing.JButton PlaceOrder;
    private javax.swing.JButton RemoveItems;
    private javax.swing.JTextField SearchIngred;
    private javax.swing.JTextField SearchItems;
    private javax.swing.JTextField SearchMenu;
    private javax.swing.JTextField SearchMenuAndItem;
    private javax.swing.JList<String> SelectedFoodItemList;
    private javax.swing.JPanel Side_panel;
    private javax.swing.JTable SimpleOrderTable;
    private javax.swing.JRadioButton SingleReportRadio;
    private javax.swing.JButton SubmitOrderItems;
    private javax.swing.JTextField TMP_ID_HOLDER;
    private javax.swing.JTextField TMP_ID_HOLDER_2;
    private javax.swing.JTextField TMP_ID_HOLDER_3;
    private javax.swing.JTextField TMP_ID_HOLDER_4;
    private javax.swing.JTextField TMP_SIMPLE_ID_HOLDER;
    private javax.swing.JButton UpdateIngred;
    private javax.swing.JButton UpdateMenu;
    private javax.swing.ButtonGroup UserReports;
    private javax.swing.JComboBox<String> YearDropDown;
    private javax.swing.JPanel btn_add_items;
    private javax.swing.JPanel btn_add_menu;
    private javax.swing.JPanel btn_create_menu;
    private javax.swing.JPanel btn_customer_order;
    private javax.swing.JPanel btn_report;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel lbl_add_items;
    private javax.swing.JLabel lbl_add_menu;
    private javax.swing.JLabel lbl_create_menu;
    private javax.swing.JLabel lbl_customer_order;
    private javax.swing.JLabel lbl_customer_order2;
    private javax.swing.JTextField requestId_HOLDER;
    // End of variables declaration//GEN-END:variables
}
